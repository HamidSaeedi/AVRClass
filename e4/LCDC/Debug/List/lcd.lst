
AVRASM ver. 2.1.30  C:\Users\Asus\Desktop\Class\e4\LCDC\Debug\List\lcd.asm Thu May 15 19:48:37 2025

C:\Users\Asus\Desktop\Class\e4\LCDC\Debug\List\lcd.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class\e4\LCDC\Debug\List\lcd.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class\e4\LCDC\Debug\List\lcd.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0049 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
000033 ff2b
000034 ffff      	.DB  0x2B,0xFF,0xFF,0xFF
                 _0x0:
000035 756e
000036 626d
000037 7265
000038 253d      	.DB  0x6E,0x75,0x6D,0x62,0x65,0x72,0x3D,0x25
000039 0064
00003a 6548
00003b 6c6c
00003c 216f      	.DB  0x64,0x0,0x48,0x65,0x6C,0x6C,0x6F,0x21
C:\Users\Asus\Desktop\Class\e4\LCDC\Debug\List\lcd.asm(1132): warning: .cseg .db misalignment - padding zero byte
00003d 0000      	.DB  0x0
                 _0x2000003:
00003e c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003f 0004      	.DW  0x04
000040 0167      	.DW  _i
000041 0066      	.DW  _0x3*2
                 
000042 0007      	.DW  0x07
000043 0160      	.DW  _0x7
000044 0074      	.DW  _0x0*2+10
                 
000045 0002      	.DW  0x02
000046 018b      	.DW  __base_y_G100
000047 007c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000048 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000049 94f8      	CLI
00004a 27ee      	CLR  R30
00004b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004c e0f1      	LDI  R31,1
00004d bffb      	OUT  GICR,R31
00004e bfeb      	OUT  GICR,R30
00004f bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000050 e08d      	LDI  R24,(14-2)+1
000051 e0a2      	LDI  R26,2
000052 27bb      	CLR  R27
                 __CLEAR_REG:
000053 93ed      	ST   X+,R30
000054 958a      	DEC  R24
000055 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000056 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000057 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000058 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000059 93ed      	ST   X+,R30
00005a 9701      	SBIW R24,1
00005b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005c e7ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005e 9185      	LPM  R24,Z+
00005f 9195      	LPM  R25,Z+
000060 9700      	SBIW R24,0
000061 f061      	BREQ __GLOBAL_INI_END
000062 91a5      	LPM  R26,Z+
000063 91b5      	LPM  R27,Z+
000064 9005      	LPM  R0,Z+
000065 9015      	LPM  R1,Z+
000066 01bf      	MOVW R22,R30
000067 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000068 9005      	LPM  R0,Z+
000069 920d      	ST   X+,R0
00006a 9701      	SBIW R24,1
00006b f7e1      	BRNE __GLOBAL_INI_LOOP
00006c 01fb      	MOVW R30,R22
00006d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006f bfed      	OUT  SPL,R30
000070 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000071 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000072 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000073 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000074 940c 0076 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * lcd.c
                 ; *
                 ; * Created: 5/15/2025 7:16:26 PM
                 ; * Author: Asus
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdint.h>
                 ;int32_t i=-213;
                 
                 	.DSEG
                 ;char buffer[32];
                 ;void main(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0011 DDRA=255;
000076 efef      	LDI  R30,LOW(255)
000077 bbea      	OUT  0x1A,R30
                 ; 0000 0012 lcd_init(16);
000078 e1a0      	LDI  R26,LOW(16)
000079 d089      	RCALL _lcd_init
                 ; 0000 0013 while (1)
                 _0x4:
                 ; 0000 0014     {
                 ; 0000 0015     // Please write your application code here
                 ; 0000 0016     sprintf(buffer,"number=%d",i);
00007a e6eb      	LDI  R30,LOW(_buffer)
00007b e0f1      	LDI  R31,HIGH(_buffer)
00007c 93fa      	ST   -Y,R31
00007d 93ea      	ST   -Y,R30
                +
00007e e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00007f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000080 93fa      	ST   -Y,R31
000081 93ea      	ST   -Y,R30
000082 91e0 0167 	LDS  R30,_i
000084 91f0 0168 	LDS  R31,_i+1
000086 9160 0169 	LDS  R22,_i+2
000088 9170 016a 	LDS  R23,_i+3
00008a 940e 0350 	CALL __PUTPARD1
00008c e084      	LDI  R24,4
00008d 940e 02a5 	CALL _sprintf
00008f 9628      	ADIW R28,8
                 ; 0000 0017      lcd_puts("Hello!");
                +
000090 e6a0     +LDI R26 , LOW ( _0x7 + ( 0 ) )
000091 e0b1     +LDI R27 , HIGH ( _0x7 + ( 0 ) )
                 	__POINTW2MN _0x7,0
000092 d05f      	RCALL _lcd_puts
                 ; 0000 0018      i++;
000093 e6a7      	LDI  R26,LOW(_i)
000094 e0b1      	LDI  R27,HIGH(_i)
000095 940e 0342 	CALL __GETD1P_INC
                +
000097 5fef     +SUBI R30 , LOW ( - 1 )
000098 4fff     +SBCI R31 , HIGH ( - 1 )
000099 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00009a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00009b 940e 0347 	CALL __PUTDP1_DEC
                 ; 0000 0019      delay_ms(300);
00009d e2ac      	LDI  R26,LOW(300)
00009e e0b1      	LDI  R27,HIGH(300)
00009f 940e 032c 	CALL _delay_ms
                 ; 0000 001A      lcd_clear();
0000a1 d02f      	RCALL _lcd_clear
                 ; 0000 001B     }
0000a2 cfd7      	RJMP _0x4
                 ; 0000 001C }
                 _0x8:
0000a3 cfff      	RJMP _0x8
                 ; .FEND
                 
                 	.DSEG
                 _0x7:
000160           	.BYTE 0x7
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000a4 93aa      	ST   -Y,R26
0000a5 b3eb      	IN   R30,0x1B
0000a6 70ef      	ANDI R30,LOW(0xF)
0000a7 2fae      	MOV  R26,R30
0000a8 81e8      	LD   R30,Y
0000a9 7fe0      	ANDI R30,LOW(0xF0)
0000aa 2bea      	OR   R30,R26
0000ab bbeb      	OUT  0x1B,R30
                +
0000ac e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ad 958a     +DEC R24
0000ae f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000af 9ada      	SBI  0x1B,2
                +
0000b0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b1 958a     +DEC R24
0000b2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b3 98da      	CBI  0x1B,2
                +
0000b4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b5 958a     +DEC R24
0000b6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b7 c077      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000b8 93aa      	ST   -Y,R26
0000b9 81a8      	LD   R26,Y
0000ba dfe9      	RCALL __lcd_write_nibble_G100
0000bb 81e8          ld    r30,y
0000bc 95e2          swap  r30
0000bd 83e8          st    y,r30
0000be 81a8      	LD   R26,Y
0000bf dfe4      	RCALL __lcd_write_nibble_G100
                +
0000c0 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000c1 958a     +DEC R24
0000c2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000c3 c06b      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000c4 93aa      	ST   -Y,R26
0000c5 81e8      	LD   R30,Y
0000c6 e0f0      	LDI  R31,0
0000c7 57e5      	SUBI R30,LOW(-__base_y_G100)
0000c8 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000c9 81e0      	LD   R30,Z
0000ca 81a9      	LDD  R26,Y+1
0000cb 0fae      	ADD  R26,R30
0000cc dfeb      	RCALL __lcd_write_data
0000cd 8059      	LDD  R5,Y+1
0000ce 8048      	LDD  R4,Y+0
0000cf 9622      	ADIW R28,2
0000d0 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000d1 e0a2      	LDI  R26,LOW(2)
0000d2 940e 02f2 	CALL SUBOPT_0x0
0000d4 e0ac      	LDI  R26,LOW(12)
0000d5 dfe2      	RCALL __lcd_write_data
0000d6 e0a1      	LDI  R26,LOW(1)
0000d7 940e 02f2 	CALL SUBOPT_0x0
0000d9 e0e0      	LDI  R30,LOW(0)
0000da 2e4e      	MOV  R4,R30
0000db 2e5e      	MOV  R5,R30
0000dc 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000dd 93aa      	ST   -Y,R26
0000de 81a8      	LD   R26,Y
0000df 30aa      	CPI  R26,LOW(0xA)
0000e0 f011      	BREQ _0x2000005
0000e1 1457      	CP   R5,R7
0000e2 f048      	BRLO _0x2000004
                 _0x2000005:
0000e3 e0e0      	LDI  R30,LOW(0)
0000e4 93ea      	ST   -Y,R30
0000e5 9443      	INC  R4
0000e6 2da4      	MOV  R26,R4
0000e7 dfdc      	RCALL _lcd_gotoxy
0000e8 81a8      	LD   R26,Y
0000e9 30aa      	CPI  R26,LOW(0xA)
0000ea f409      	BRNE _0x2000007
0000eb c043      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0000ec 9453      	INC  R5
0000ed 9ad8      	SBI  0x1B,0
0000ee 81a8      	LD   R26,Y
0000ef dfc8      	RCALL __lcd_write_data
0000f0 98d8      	CBI  0x1B,0
0000f1 c03d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000f2 93ba      	ST   -Y,R27
0000f3 93aa      	ST   -Y,R26
0000f4 931a      	ST   -Y,R17
                 _0x2000008:
0000f5 81a9      	LDD  R26,Y+1
0000f6 81ba      	LDD  R27,Y+1+1
0000f7 91ed      	LD   R30,X+
0000f8 83a9      	STD  Y+1,R26
0000f9 83ba      	STD  Y+1+1,R27
0000fa 2f1e      	MOV  R17,R30
0000fb 30e0      	CPI  R30,0
0000fc f019      	BREQ _0x200000A
0000fd 2fa1      	MOV  R26,R17
0000fe dfde      	RCALL _lcd_putchar
0000ff cff5      	RJMP _0x2000008
                 _0x200000A:
000100 8118      	LDD  R17,Y+0
000101 9623      	ADIW R28,3
000102 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000103 93aa      	ST   -Y,R26
000104 b3ea      	IN   R30,0x1A
000105 6fe0      	ORI  R30,LOW(0xF0)
000106 bbea      	OUT  0x1A,R30
000107 9ad2      	SBI  0x1A,2
000108 9ad0      	SBI  0x1A,0
000109 9ad1      	SBI  0x1A,1
00010a 98da      	CBI  0x1B,2
00010b 98d8      	CBI  0x1B,0
00010c 98d9      	CBI  0x1B,1
00010d 8078      	LDD  R7,Y+0
00010e 81e8      	LD   R30,Y
00010f 58e0      	SUBI R30,-LOW(128)
                +
000110 93e0 018d+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000112 81e8      	LD   R30,Y
000113 54e0      	SUBI R30,-LOW(192)
                +
000114 93e0 018e+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000116 e1a4      	LDI  R26,LOW(20)
000117 e0b0      	LDI  R27,0
000118 940e 032c 	CALL _delay_ms
00011a 940e 02f8 	CALL SUBOPT_0x1
00011c 940e 02f8 	CALL SUBOPT_0x1
00011e 940e 02f8 	CALL SUBOPT_0x1
000120 e2a0      	LDI  R26,LOW(32)
000121 df82      	RCALL __lcd_write_nibble_G100
                +
000122 ec88     +LDI R24 , LOW ( 200 )
000123 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000124 9701     +SBIW R24 , 1
000125 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000126 e2a8      	LDI  R26,LOW(40)
000127 df90      	RCALL __lcd_write_data
000128 e0a4      	LDI  R26,LOW(4)
000129 df8e      	RCALL __lcd_write_data
00012a e8a5      	LDI  R26,LOW(133)
00012b df8c      	RCALL __lcd_write_data
00012c e0a6      	LDI  R26,LOW(6)
00012d df8a      	RCALL __lcd_write_data
00012e dfa2      	RCALL _lcd_clear
                 _0x2080002:
00012f 9621      	ADIW R28,1
000130 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000131 93ba      	ST   -Y,R27
000132 93aa      	ST   -Y,R26
000133 931a      	ST   -Y,R17
000134 930a      	ST   -Y,R16
000135 81aa      	LDD  R26,Y+2
000136 81bb      	LDD  R27,Y+2+1
000137 9612      	ADIW R26,2
000138 940e 033e 	CALL __GETW1P
00013a 9730      	SBIW R30,0
00013b f159      	BREQ _0x2020010
00013c 81aa      	LDD  R26,Y+2
00013d 81bb      	LDD  R27,Y+2+1
00013e 9614      	ADIW R26,4
00013f 940e 033e 	CALL __GETW1P
000141 018f      	MOVW R16,R30
000142 9730      	SBIW R30,0
000143 f061      	BREQ _0x2020012
                +
000144 3002     +CPI R16 , LOW ( 2 )
000145 e0e0     +LDI R30 , HIGH ( 2 )
000146 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000147 f098      	BRLO _0x2020013
000148 01f8      	MOVW R30,R16
000149 9731      	SBIW R30,1
00014a 018f      	MOVW R16,R30
                +
00014b 81aa     +LDD R26 , Y + 2
00014c 81bb     +LDD R27 , Y + 2 + 1
00014d 9614     +ADIW R26 , 4
00014e 93ed     +ST X + , R30
00014f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000150 81aa      	LDD  R26,Y+2
000151 81bb      	LDD  R27,Y+2+1
000152 9612      	ADIW R26,2
000153 91ed      	LD   R30,X+
000154 91fd      	LD   R31,X+
000155 9631      	ADIW R30,1
000156 93fe      	ST   -X,R31
000157 93ee      	ST   -X,R30
000158 9731      	SBIW R30,1
000159 81ac      	LDD  R26,Y+4
00015a 83a0      	STD  Z+0,R26
                 _0x2020013:
00015b 81aa      	LDD  R26,Y+2
00015c 81bb      	LDD  R27,Y+2+1
00015d 940e 033e 	CALL __GETW1P
00015f 23ff      	TST  R31
000160 f02a      	BRMI _0x2020014
000161 91ed      	LD   R30,X+
000162 91fd      	LD   R31,X+
000163 9631      	ADIW R30,1
000164 93fe      	ST   -X,R31
000165 93ee      	ST   -X,R30
                 _0x2020014:
000166 c006      	RJMP _0x2020015
                 _0x2020010:
000167 81aa      	LDD  R26,Y+2
000168 81bb      	LDD  R27,Y+2+1
000169 efef      	LDI  R30,LOW(65535)
00016a efff      	LDI  R31,HIGH(65535)
00016b 93ed      	ST   X+,R30
00016c 93fc      	ST   X,R31
                 _0x2020015:
00016d 8119      	LDD  R17,Y+1
00016e 8108      	LDD  R16,Y+0
00016f 9625      	ADIW R28,5
000170 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000171 93ba      	ST   -Y,R27
000172 93aa      	ST   -Y,R26
000173 9726      	SBIW R28,6
000174 940e 0355 	CALL __SAVELOCR6
000176 e010      	LDI  R17,0
000177 85ac      	LDD  R26,Y+12
000178 85bd      	LDD  R27,Y+12+1
000179 e0e0      	LDI  R30,LOW(0)
00017a e0f0      	LDI  R31,HIGH(0)
00017b 93ed      	ST   X+,R30
00017c 93fc      	ST   X,R31
                 _0x2020016:
00017d 89ea      	LDD  R30,Y+18
00017e 89fb      	LDD  R31,Y+18+1
00017f 9631      	ADIW R30,1
000180 8bea      	STD  Y+18,R30
000181 8bfb      	STD  Y+18+1,R31
000182 9731      	SBIW R30,1
000183 91e4      	LPM  R30,Z
000184 2f2e      	MOV  R18,R30
000185 30e0      	CPI  R30,0
000186 f409      	BRNE PC+2
000187 c115      	RJMP _0x2020018
000188 2fe1      	MOV  R30,R17
000189 30e0      	CPI  R30,0
00018a f439      	BRNE _0x202001C
00018b 3225      	CPI  R18,37
00018c f411      	BRNE _0x202001D
00018d e011      	LDI  R17,LOW(1)
00018e c002      	RJMP _0x202001E
                 _0x202001D:
00018f 940e 0300 	CALL SUBOPT_0x2
                 _0x202001E:
000191 c10a      	RJMP _0x202001B
                 _0x202001C:
000192 30e1      	CPI  R30,LOW(0x1)
000193 f4a9      	BRNE _0x202001F
000194 3225      	CPI  R18,37
000195 f419      	BRNE _0x2020020
000196 940e 0300 	CALL SUBOPT_0x2
000198 c102      	RJMP _0x20200CC
                 _0x2020020:
000199 e012      	LDI  R17,LOW(2)
00019a e040      	LDI  R20,LOW(0)
00019b e000      	LDI  R16,LOW(0)
00019c 322d      	CPI  R18,45
00019d f411      	BRNE _0x2020021
00019e e001      	LDI  R16,LOW(1)
00019f c0fc      	RJMP _0x202001B
                 _0x2020021:
0001a0 322b      	CPI  R18,43
0001a1 f411      	BRNE _0x2020022
0001a2 e24b      	LDI  R20,LOW(43)
0001a3 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001a4 3220      	CPI  R18,32
0001a5 f411      	BRNE _0x2020023
0001a6 e240      	LDI  R20,LOW(32)
0001a7 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001a8 c002      	RJMP _0x2020024
                 _0x202001F:
0001a9 30e2      	CPI  R30,LOW(0x2)
0001aa f439      	BRNE _0x2020025
                 _0x2020024:
0001ab e050      	LDI  R21,LOW(0)
0001ac e013      	LDI  R17,LOW(3)
0001ad 3320      	CPI  R18,48
0001ae f411      	BRNE _0x2020026
0001af 6800      	ORI  R16,LOW(128)
0001b0 c0eb      	RJMP _0x202001B
                 _0x2020026:
0001b1 c003      	RJMP _0x2020027
                 _0x2020025:
0001b2 30e3      	CPI  R30,LOW(0x3)
0001b3 f009      	BREQ PC+2
0001b4 c0e7      	RJMP _0x202001B
                 _0x2020027:
0001b5 3320      	CPI  R18,48
0001b6 f010      	BRLO _0x202002A
0001b7 332a      	CPI  R18,58
0001b8 f008      	BRLO _0x202002B
                 _0x202002A:
0001b9 c007      	RJMP _0x2020029
                 _0x202002B:
0001ba e0aa      	LDI  R26,LOW(10)
0001bb 9f5a      	MUL  R21,R26
0001bc 2d50      	MOV  R21,R0
0001bd 2fe2      	MOV  R30,R18
0001be 53e0      	SUBI R30,LOW(48)
0001bf 0f5e      	ADD  R21,R30
0001c0 c0db      	RJMP _0x202001B
                 _0x2020029:
0001c1 2fe2      	MOV  R30,R18
0001c2 36e3      	CPI  R30,LOW(0x63)
0001c3 f449      	BRNE _0x202002F
0001c4 940e 0307 	CALL SUBOPT_0x3
0001c6 89e8      	LDD  R30,Y+16
0001c7 89f9      	LDD  R31,Y+16+1
0001c8 81a4      	LDD  R26,Z+4
0001c9 93aa      	ST   -Y,R26
0001ca 940e 030d 	CALL SUBOPT_0x4
0001cc c0ce      	RJMP _0x2020030
                 _0x202002F:
0001cd 37e3      	CPI  R30,LOW(0x73)
0001ce f441      	BRNE _0x2020032
0001cf 940e 0307 	CALL SUBOPT_0x3
0001d1 940e 0313 	CALL SUBOPT_0x5
0001d3 940e 02d9 	CALL _strlen
0001d5 2f1e      	MOV  R17,R30
0001d6 c00a      	RJMP _0x2020033
                 _0x2020032:
0001d7 37e0      	CPI  R30,LOW(0x70)
0001d8 f461      	BRNE _0x2020035
0001d9 940e 0307 	CALL SUBOPT_0x3
0001db 940e 0313 	CALL SUBOPT_0x5
0001dd 940e 02e5 	CALL _strlenf
0001df 2f1e      	MOV  R17,R30
0001e0 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001e1 6002      	ORI  R16,LOW(2)
0001e2 770f      	ANDI R16,LOW(127)
0001e3 e030      	LDI  R19,LOW(0)
0001e4 c034      	RJMP _0x2020036
                 _0x2020035:
0001e5 36e4      	CPI  R30,LOW(0x64)
0001e6 f011      	BREQ _0x2020039
0001e7 36e9      	CPI  R30,LOW(0x69)
0001e8 f411      	BRNE _0x202003A
                 _0x2020039:
0001e9 6004      	ORI  R16,LOW(4)
0001ea c002      	RJMP _0x202003B
                 _0x202003A:
0001eb 37e5      	CPI  R30,LOW(0x75)
0001ec f431      	BRNE _0x202003C
                 _0x202003B:
0001ed e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001ee e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001ef 83ee      	STD  Y+6,R30
0001f0 83ff      	STD  Y+6+1,R31
0001f1 e015      	LDI  R17,LOW(5)
0001f2 c00c      	RJMP _0x202003D
                 _0x202003C:
0001f3 35e8      	CPI  R30,LOW(0x58)
0001f4 f411      	BRNE _0x202003F
0001f5 6008      	ORI  R16,LOW(8)
0001f6 c003      	RJMP _0x2020040
                 _0x202003F:
0001f7 37e8      	CPI  R30,LOW(0x78)
0001f8 f009      	BREQ PC+2
0001f9 c0a1      	RJMP _0x2020071
                 _0x2020040:
0001fa e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0001fb e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001fc 83ee      	STD  Y+6,R30
0001fd 83ff      	STD  Y+6+1,R31
0001fe e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001ff ff02      	SBRS R16,2
000200 c014      	RJMP _0x2020042
000201 940e 0307 	CALL SUBOPT_0x3
000203 940e 031d 	CALL SUBOPT_0x6
000205 85ab      	LDD  R26,Y+11
000206 23aa      	TST  R26
000207 f43a      	BRPL _0x2020043
000208 85ea      	LDD  R30,Y+10
000209 85fb      	LDD  R31,Y+10+1
00020a 940e 033a 	CALL __ANEGW1
00020c 87ea      	STD  Y+10,R30
00020d 87fb      	STD  Y+10+1,R31
00020e e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00020f 3040      	CPI  R20,0
000210 f011      	BREQ _0x2020044
000211 5f1f      	SUBI R17,-LOW(1)
000212 c001      	RJMP _0x2020045
                 _0x2020044:
000213 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000214 c004      	RJMP _0x2020046
                 _0x2020042:
000215 940e 0307 	CALL SUBOPT_0x3
000217 940e 031d 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000219 fd00      	SBRC R16,0
00021a c011      	RJMP _0x2020047
                 _0x2020048:
00021b 1715      	CP   R17,R21
00021c f478      	BRSH _0x202004A
00021d ff07      	SBRS R16,7
00021e c008      	RJMP _0x202004B
00021f ff02      	SBRS R16,2
000220 c004      	RJMP _0x202004C
000221 7f0b      	ANDI R16,LOW(251)
000222 2f24      	MOV  R18,R20
000223 5011      	SUBI R17,LOW(1)
000224 c001      	RJMP _0x202004D
                 _0x202004C:
000225 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000226 c001      	RJMP _0x202004E
                 _0x202004B:
000227 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000228 940e 0300 	CALL SUBOPT_0x2
00022a 5051      	SUBI R21,LOW(1)
00022b cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00022c 2f31      	MOV  R19,R17
00022d ff01      	SBRS R16,1
00022e c017      	RJMP _0x202004F
                 _0x2020050:
00022f 3030      	CPI  R19,0
000230 f0a1      	BREQ _0x2020052
000231 ff03      	SBRS R16,3
000232 c006      	RJMP _0x2020053
000233 81ee      	LDD  R30,Y+6
000234 81ff      	LDD  R31,Y+6+1
000235 9125      	LPM  R18,Z+
000236 83ee      	STD  Y+6,R30
000237 83ff      	STD  Y+6+1,R31
000238 c005      	RJMP _0x2020054
                 _0x2020053:
000239 81ae      	LDD  R26,Y+6
00023a 81bf      	LDD  R27,Y+6+1
00023b 912d      	LD   R18,X+
00023c 83ae      	STD  Y+6,R26
00023d 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00023e 940e 0300 	CALL SUBOPT_0x2
000240 3050      	CPI  R21,0
000241 f009      	BREQ _0x2020055
000242 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000243 5031      	SUBI R19,LOW(1)
000244 cfea      	RJMP _0x2020050
                 _0x2020052:
000245 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000246 e320      	LDI  R18,LOW(48)
000247 81ee      	LDD  R30,Y+6
000248 81ff      	LDD  R31,Y+6+1
000249 940e 034c 	CALL __GETW1PF
00024b 87e8      	STD  Y+8,R30
00024c 87f9      	STD  Y+8+1,R31
00024d 81ee      	LDD  R30,Y+6
00024e 81ff      	LDD  R31,Y+6+1
00024f 9632      	ADIW R30,2
000250 83ee      	STD  Y+6,R30
000251 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000252 85e8      	LDD  R30,Y+8
000253 85f9      	LDD  R31,Y+8+1
000254 85aa      	LDD  R26,Y+10
000255 85bb      	LDD  R27,Y+10+1
000256 17ae      	CP   R26,R30
000257 07bf      	CPC  R27,R31
000258 f050      	BRLO _0x202005C
000259 5f2f      	SUBI R18,-LOW(1)
00025a 85a8      	LDD  R26,Y+8
00025b 85b9      	LDD  R27,Y+8+1
00025c 85ea      	LDD  R30,Y+10
00025d 85fb      	LDD  R31,Y+10+1
00025e 1bea      	SUB  R30,R26
00025f 0bfb      	SBC  R31,R27
000260 87ea      	STD  Y+10,R30
000261 87fb      	STD  Y+10+1,R31
000262 cfef      	RJMP _0x202005A
                 _0x202005C:
000263 332a      	CPI  R18,58
000264 f028      	BRLO _0x202005D
000265 ff03      	SBRS R16,3
000266 c002      	RJMP _0x202005E
000267 5f29      	SUBI R18,-LOW(7)
000268 c001      	RJMP _0x202005F
                 _0x202005E:
000269 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00026a fd04      	SBRC R16,4
00026b c01a      	RJMP _0x2020061
00026c 3321      	CPI  R18,49
00026d f420      	BRSH _0x2020063
00026e 85a8      	LDD  R26,Y+8
00026f 85b9      	LDD  R27,Y+8+1
000270 9711      	SBIW R26,1
000271 f409      	BRNE _0x2020062
                 _0x2020063:
000272 c009      	RJMP _0x20200CD
                 _0x2020062:
000273 1753      	CP   R21,R19
000274 f010      	BRLO _0x2020067
000275 ff00      	SBRS R16,0
000276 c001      	RJMP _0x2020068
                 _0x2020067:
000277 c013      	RJMP _0x2020066
                 _0x2020068:
000278 e220      	LDI  R18,LOW(32)
000279 ff07      	SBRS R16,7
00027a c00b      	RJMP _0x2020069
00027b e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00027c 6100      	ORI  R16,LOW(16)
00027d ff02      	SBRS R16,2
00027e c007      	RJMP _0x202006A
00027f 7f0b      	ANDI R16,LOW(251)
000280 934a      	ST   -Y,R20
000281 940e 030d 	CALL SUBOPT_0x4
000283 3050      	CPI  R21,0
000284 f009      	BREQ _0x202006B
000285 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000286 940e 0300 	CALL SUBOPT_0x2
000288 3050      	CPI  R21,0
000289 f009      	BREQ _0x202006C
00028a 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
00028b 5031      	SUBI R19,LOW(1)
00028c 85a8      	LDD  R26,Y+8
00028d 85b9      	LDD  R27,Y+8+1
00028e 9712      	SBIW R26,2
00028f f008      	BRLO _0x2020059
000290 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000291 ff00      	SBRS R16,0
000292 c008      	RJMP _0x202006D
                 _0x202006E:
000293 3050      	CPI  R21,0
000294 f031      	BREQ _0x2020070
000295 5051      	SUBI R21,LOW(1)
000296 e2e0      	LDI  R30,LOW(32)
000297 93ea      	ST   -Y,R30
000298 940e 030d 	CALL SUBOPT_0x4
00029a cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
00029b e010      	LDI  R17,LOW(0)
                 _0x202001B:
00029c cee0      	RJMP _0x2020016
                 _0x2020018:
00029d 85ac      	LDD  R26,Y+12
00029e 85bd      	LDD  R27,Y+12+1
00029f 940e 033e 	CALL __GETW1P
0002a1 940e 035c 	CALL __LOADLOCR6
0002a3 9664      	ADIW R28,20
0002a4 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002a5 92ff      	PUSH R15
0002a6 2ef8      	MOV  R15,R24
0002a7 9726      	SBIW R28,6
0002a8 940e 0357 	CALL __SAVELOCR4
0002aa 940e 0325 	CALL SUBOPT_0x7
0002ac 9730      	SBIW R30,0
0002ad f419      	BRNE _0x2020072
0002ae efef      	LDI  R30,LOW(65535)
0002af efff      	LDI  R31,HIGH(65535)
0002b0 c023      	RJMP _0x2080001
                 _0x2020072:
0002b1 01de      	MOVW R26,R28
0002b2 9616      	ADIW R26,6
0002b3 940e 0336 	CALL __ADDW2R15
0002b5 018d      	MOVW R16,R26
0002b6 940e 0325 	CALL SUBOPT_0x7
0002b8 83ee      	STD  Y+6,R30
0002b9 83ff      	STD  Y+6+1,R31
0002ba e0e0      	LDI  R30,LOW(0)
0002bb 87e8      	STD  Y+8,R30
0002bc 87e9      	STD  Y+8+1,R30
0002bd 01de      	MOVW R26,R28
0002be 961a      	ADIW R26,10
0002bf 940e 0336 	CALL __ADDW2R15
0002c1 940e 033e 	CALL __GETW1P
0002c3 93fa      	ST   -Y,R31
0002c4 93ea      	ST   -Y,R30
0002c5 931a      	ST   -Y,R17
0002c6 930a      	ST   -Y,R16
0002c7 e3e1      	LDI  R30,LOW(_put_buff_G101)
0002c8 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002c9 93fa      	ST   -Y,R31
0002ca 93ea      	ST   -Y,R30
0002cb 01de      	MOVW R26,R28
0002cc 961a      	ADIW R26,10
0002cd dea3      	RCALL __print_G101
0002ce 019f      	MOVW R18,R30
0002cf 81ae      	LDD  R26,Y+6
0002d0 81bf      	LDD  R27,Y+6+1
0002d1 e0e0      	LDI  R30,LOW(0)
0002d2 93ec      	ST   X,R30
0002d3 01f9      	MOVW R30,R18
                 _0x2080001:
0002d4 940e 035e 	CALL __LOADLOCR4
0002d6 962a      	ADIW R28,10
0002d7 90ff      	POP  R15
0002d8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002d9 93ba      	ST   -Y,R27
0002da 93aa      	ST   -Y,R26
0002db 91a9          ld   r26,y+
0002dc 91b9          ld   r27,y+
0002dd 27ee          clr  r30
0002de 27ff          clr  r31
                 strlen0:
0002df 916d          ld   r22,x+
0002e0 2366          tst  r22
0002e1 f011          breq strlen1
0002e2 9631          adiw r30,1
0002e3 cffb          rjmp strlen0
                 strlen1:
0002e4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002e5 93ba      	ST   -Y,R27
0002e6 93aa      	ST   -Y,R26
0002e7 27aa          clr  r26
0002e8 27bb          clr  r27
0002e9 91e9          ld   r30,y+
0002ea 91f9          ld   r31,y+
                 strlenf0:
0002eb 9005      	lpm  r0,z+
0002ec 2000          tst  r0
0002ed f011          breq strlenf1
0002ee 9611          adiw r26,1
0002ef cffb          rjmp strlenf0
                 strlenf1:
0002f0 01fd          movw r30,r26
0002f1 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _i:
000167           	.BYTE 0x4
                 _buffer:
00016b           	.BYTE 0x20
                 __base_y_G100:
00018b           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002f2 940e 00b8 	CALL __lcd_write_data
0002f4 e0a3      	LDI  R26,LOW(3)
0002f5 e0b0      	LDI  R27,0
0002f6 940c 032c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
0002f8 e3a0      	LDI  R26,LOW(48)
0002f9 940e 00a4 	CALL __lcd_write_nibble_G100
                +
0002fb ec88     +LDI R24 , LOW ( 200 )
0002fc e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002fd 9701     +SBIW R24 , 1
0002fe f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000300 932a      	ST   -Y,R18
000301 85ad      	LDD  R26,Y+13
000302 85be      	LDD  R27,Y+13+1
000303 85ef      	LDD  R30,Y+15
000304 89f8      	LDD  R31,Y+15+1
000305 9509      	ICALL
000306 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000307 89e8      	LDD  R30,Y+16
000308 89f9      	LDD  R31,Y+16+1
000309 9734      	SBIW R30,4
00030a 8be8      	STD  Y+16,R30
00030b 8bf9      	STD  Y+16+1,R31
00030c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00030d 85ad      	LDD  R26,Y+13
00030e 85be      	LDD  R27,Y+13+1
00030f 85ef      	LDD  R30,Y+15
000310 89f8      	LDD  R31,Y+15+1
000311 9509      	ICALL
000312 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
000313 89a8      	LDD  R26,Y+16
000314 89b9      	LDD  R27,Y+16+1
000315 9614      	ADIW R26,4
000316 940e 033e 	CALL __GETW1P
000318 83ee      	STD  Y+6,R30
000319 83ff      	STD  Y+6+1,R31
00031a 81ae      	LDD  R26,Y+6
00031b 81bf      	LDD  R27,Y+6+1
00031c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
00031d 89a8      	LDD  R26,Y+16
00031e 89b9      	LDD  R27,Y+16+1
00031f 9614      	ADIW R26,4
000320 940e 033e 	CALL __GETW1P
000322 87ea      	STD  Y+10,R30
000323 87fb      	STD  Y+10+1,R31
000324 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000325 01de      	MOVW R26,R28
000326 961c      	ADIW R26,12
000327 940e 0336 	CALL __ADDW2R15
000329 940e 033e 	CALL __GETW1P
00032b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00032c 9610      	adiw r26,0
00032d f039      	breq __delay_ms1
                 __delay_ms0:
00032e 95a8      	wdr
                +
00032f ed80     +LDI R24 , LOW ( 0x7D0 )
000330 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000331 9701     +SBIW R24 , 1
000332 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000333 9711      	sbiw r26,1
000334 f7c9      	brne __delay_ms0
                 __delay_ms1:
000335 9508      	ret
                 
                 __ADDW2R15:
000336 2400      	CLR  R0
000337 0daf      	ADD  R26,R15
000338 1db0      	ADC  R27,R0
000339 9508      	RET
                 
                 __ANEGW1:
00033a 95f1      	NEG  R31
00033b 95e1      	NEG  R30
00033c 40f0      	SBCI R31,0
00033d 9508      	RET
                 
                 __GETW1P:
00033e 91ed      	LD   R30,X+
00033f 91fc      	LD   R31,X
000340 9711      	SBIW R26,1
000341 9508      	RET
                 
                 __GETD1P_INC:
000342 91ed      	LD   R30,X+
000343 91fd      	LD   R31,X+
000344 916d      	LD   R22,X+
000345 917d      	LD   R23,X+
000346 9508      	RET
                 
                 __PUTDP1_DEC:
000347 937e      	ST   -X,R23
000348 936e      	ST   -X,R22
000349 93fe      	ST   -X,R31
00034a 93ee      	ST   -X,R30
00034b 9508      	RET
                 
                 __GETW1PF:
00034c 9005      	LPM  R0,Z+
00034d 91f4      	LPM  R31,Z
00034e 2de0      	MOV  R30,R0
00034f 9508      	RET
                 
                 __PUTPARD1:
000350 937a      	ST   -Y,R23
000351 936a      	ST   -Y,R22
000352 93fa      	ST   -Y,R31
000353 93ea      	ST   -Y,R30
000354 9508      	RET
                 
                 __SAVELOCR6:
000355 935a      	ST   -Y,R21
                 __SAVELOCR5:
000356 934a      	ST   -Y,R20
                 __SAVELOCR4:
000357 933a      	ST   -Y,R19
                 __SAVELOCR3:
000358 932a      	ST   -Y,R18
                 __SAVELOCR2:
000359 931a      	ST   -Y,R17
00035a 930a      	ST   -Y,R16
00035b 9508      	RET
                 
                 __LOADLOCR6:
00035c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00035d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00035e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00035f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000360 8119      	LDD  R17,Y+1
000361 8108      	LD   R16,Y
000362 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   9 r23:   5 
r24:  23 r25:   5 r26:  98 r27:  39 r28:  14 r29:   1 r30: 150 r31:  61 
x  :  31 y  : 165 z  :  15 
Registers used: 25 out of 35 (71.4%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  51 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  29 ldd   :  77 ldi   :  88 
lds   :   4 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  17 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :   9 pop   :   1 push  :   1 rcall :  17 ret   :  26 
reti  :   0 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   1 sbci  :   5 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  62 std   :  31 sts   :   2 sub   :   1 subi  :  17 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006c6   1672     62   1734   16384  10.6%
[.dseg] 0x000060 0x00018f      0     47     47    1024   4.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
