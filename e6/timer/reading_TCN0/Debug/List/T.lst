
AVRASM ver. 2.1.30  C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm Thu May 29 19:48:34 2025

C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm(1091): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0041 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm(1130): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x0
                 
                 _0x0:
000034 4354
000035 544e
000036 3d30
000037 6425      	.DB  0x54,0x43,0x4E,0x54,0x30,0x3D,0x25,0x64
C:\Users\Asus\Desktop\Class2\e6\timer\reading_TCN0\Debug\List\T.asm(1134): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x0
                 _0x2020003:
000039 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003a 0001      	.DW  0x01
00003b 0005      	.DW  0x05
00003c 0066      	.DW  __REG_VARS*2
                 
00003d 0002      	.DW  0x02
00003e 0180      	.DW  __base_y_G101
00003f 0072      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
000040 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000041 94f8      	CLI
000042 27ee      	CLR  R30
000043 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000044 e0f1      	LDI  R31,1
000045 bffb      	OUT  GICR,R31
000046 bfeb      	OUT  GICR,R30
000047 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000048 e08d      	LDI  R24,(14-2)+1
000049 e0a2      	LDI  R26,2
00004a 27bb      	CLR  R27
                 __CLEAR_REG:
00004b 93ed      	ST   X+,R30
00004c 958a      	DEC  R24
00004d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004f e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000050 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000051 93ed      	ST   X+,R30
000052 9701      	SBIW R24,1
000053 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000054 e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000055 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000056 9185      	LPM  R24,Z+
000057 9195      	LPM  R25,Z+
000058 9700      	SBIW R24,0
000059 f061      	BREQ __GLOBAL_INI_END
00005a 91a5      	LPM  R26,Z+
00005b 91b5      	LPM  R27,Z+
00005c 9005      	LPM  R0,Z+
00005d 9015      	LPM  R1,Z+
00005e 01bf      	MOVW R22,R30
00005f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000060 9005      	LPM  R0,Z+
000061 920d      	ST   X+,R0
000062 9701      	SBIW R24,1
000063 f7e1      	BRNE __GLOBAL_INI_LOOP
000064 01fb      	MOVW R30,R22
000065 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000066 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000067 bfed      	OUT  SPL,R30
000068 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000069 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006b e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006c 940c 006e 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * T.c
                 ; *
                 ; * Created: 5/29/2025 7:30:19 PM
                 ; * Author: Asus
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdint.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;
                 ;char lcd_buffer[32];
                 ;uint8_t count=0;
                 ;void main(void)
                 ; 0000 0011 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0012 TCCR0 = TCCR0 | 0x05;
00006e b7e3      	IN   R30,0x33
00006f 60e5      	ORI  R30,LOW(0x5)
000070 bfe3      	OUT  0x33,R30
                 ; 0000 0013 
                 ; 0000 0014 lcd_init(16);
000071 e1a0      	LDI  R26,LOW(16)
000072 940e 029d 	CALL _lcd_init
                 ; 0000 0015 while (1)
                 _0x3:
                 ; 0000 0016     {
                 ; 0000 0017     // Please write your application code here
                 ; 0000 0018     lcd_gotoxy(0,0);
000074 e0e0      	LDI  R30,LOW(0)
000075 93ea      	ST   -Y,R30
000076 e0a0      	LDI  R26,LOW(0)
000077 940e 025e 	CALL _lcd_gotoxy
                 ; 0000 0019     sprintf(lcd_buffer,"TCNT0=%d",count);
000079 e6e0      	LDI  R30,LOW(_lcd_buffer)
00007a e0f1      	LDI  R31,HIGH(_lcd_buffer)
00007b 93fa      	ST   -Y,R31
00007c 93ea      	ST   -Y,R30
                +
00007d e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00007e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00007f 93fa      	ST   -Y,R31
000080 93ea      	ST   -Y,R30
000081 2de5      	MOV  R30,R5
000082 27ff      	CLR  R31
000083 2766      	CLR  R22
000084 2777      	CLR  R23
000085 940e 0336 	CALL __PUTPARD1
000087 e084      	LDI  R24,4
000088 940e 020a 	CALL _sprintf
00008a 9628      	ADIW R28,8
                 ; 0000 001A     lcd_puts(lcd_buffer);
00008b e6a0      	LDI  R26,LOW(_lcd_buffer)
00008c e0b1      	LDI  R27,HIGH(_lcd_buffer)
00008d 940e 028c 	CALL _lcd_puts
                 ; 0000 001B     count=TCNT0;
00008f b652      	IN   R5,50
                 ; 0000 001C     delay_ms(1);
000090 e0a1      	LDI  R26,LOW(1)
000091 e0b0      	LDI  R27,0
000092 940e 031c 	CALL _delay_ms
                 ; 0000 001D 
                 ; 0000 001E     }
000094 cfdf      	RJMP _0x3
                 ; 0000 001F }
                 _0x6:
000095 cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000096 93ba      	ST   -Y,R27
000097 93aa      	ST   -Y,R26
000098 931a      	ST   -Y,R17
000099 930a      	ST   -Y,R16
00009a 81aa      	LDD  R26,Y+2
00009b 81bb      	LDD  R27,Y+2+1
00009c 9612      	ADIW R26,2
00009d 940e 032e 	CALL __GETW1P
00009f 9730      	SBIW R30,0
0000a0 f159      	BREQ _0x2000010
0000a1 81aa      	LDD  R26,Y+2
0000a2 81bb      	LDD  R27,Y+2+1
0000a3 9614      	ADIW R26,4
0000a4 940e 032e 	CALL __GETW1P
0000a6 018f      	MOVW R16,R30
0000a7 9730      	SBIW R30,0
0000a8 f061      	BREQ _0x2000012
                +
0000a9 3002     +CPI R16 , LOW ( 2 )
0000aa e0e0     +LDI R30 , HIGH ( 2 )
0000ab 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000ac f098      	BRLO _0x2000013
0000ad 01f8      	MOVW R30,R16
0000ae 9731      	SBIW R30,1
0000af 018f      	MOVW R16,R30
                +
0000b0 81aa     +LDD R26 , Y + 2
0000b1 81bb     +LDD R27 , Y + 2 + 1
0000b2 9614     +ADIW R26 , 4
0000b3 93ed     +ST X + , R30
0000b4 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0000b5 81aa      	LDD  R26,Y+2
0000b6 81bb      	LDD  R27,Y+2+1
0000b7 9612      	ADIW R26,2
0000b8 91ed      	LD   R30,X+
0000b9 91fd      	LD   R31,X+
0000ba 9631      	ADIW R30,1
0000bb 93fe      	ST   -X,R31
0000bc 93ee      	ST   -X,R30
0000bd 9731      	SBIW R30,1
0000be 81ac      	LDD  R26,Y+4
0000bf 83a0      	STD  Z+0,R26
                 _0x2000013:
0000c0 81aa      	LDD  R26,Y+2
0000c1 81bb      	LDD  R27,Y+2+1
0000c2 940e 032e 	CALL __GETW1P
0000c4 23ff      	TST  R31
0000c5 f02a      	BRMI _0x2000014
0000c6 91ed      	LD   R30,X+
0000c7 91fd      	LD   R31,X+
0000c8 9631      	ADIW R30,1
0000c9 93fe      	ST   -X,R31
0000ca 93ee      	ST   -X,R30
                 _0x2000014:
0000cb c006      	RJMP _0x2000015
                 _0x2000010:
0000cc 81aa      	LDD  R26,Y+2
0000cd 81bb      	LDD  R27,Y+2+1
0000ce efef      	LDI  R30,LOW(65535)
0000cf efff      	LDI  R31,HIGH(65535)
0000d0 93ed      	ST   X+,R30
0000d1 93fc      	ST   X,R31
                 _0x2000015:
0000d2 8119      	LDD  R17,Y+1
0000d3 8108      	LDD  R16,Y+0
0000d4 9625      	ADIW R28,5
0000d5 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000d6 93ba      	ST   -Y,R27
0000d7 93aa      	ST   -Y,R26
0000d8 9726      	SBIW R28,6
0000d9 940e 033b 	CALL __SAVELOCR6
0000db e010      	LDI  R17,0
0000dc 85ac      	LDD  R26,Y+12
0000dd 85bd      	LDD  R27,Y+12+1
0000de e0e0      	LDI  R30,LOW(0)
0000df e0f0      	LDI  R31,HIGH(0)
0000e0 93ed      	ST   X+,R30
0000e1 93fc      	ST   X,R31
                 _0x2000016:
0000e2 89ea      	LDD  R30,Y+18
0000e3 89fb      	LDD  R31,Y+18+1
0000e4 9631      	ADIW R30,1
0000e5 8bea      	STD  Y+18,R30
0000e6 8bfb      	STD  Y+18+1,R31
0000e7 9731      	SBIW R30,1
0000e8 91e4      	LPM  R30,Z
0000e9 2f2e      	MOV  R18,R30
0000ea 30e0      	CPI  R30,0
0000eb f409      	BRNE PC+2
0000ec c115      	RJMP _0x2000018
0000ed 2fe1      	MOV  R30,R17
0000ee 30e0      	CPI  R30,0
0000ef f439      	BRNE _0x200001C
0000f0 3225      	CPI  R18,37
0000f1 f411      	BRNE _0x200001D
0000f2 e011      	LDI  R17,LOW(1)
0000f3 c002      	RJMP _0x200001E
                 _0x200001D:
0000f4 940e 02e3 	CALL SUBOPT_0x0
                 _0x200001E:
0000f6 c10a      	RJMP _0x200001B
                 _0x200001C:
0000f7 30e1      	CPI  R30,LOW(0x1)
0000f8 f4a9      	BRNE _0x200001F
0000f9 3225      	CPI  R18,37
0000fa f419      	BRNE _0x2000020
0000fb 940e 02e3 	CALL SUBOPT_0x0
0000fd c102      	RJMP _0x20000CC
                 _0x2000020:
0000fe e012      	LDI  R17,LOW(2)
0000ff e040      	LDI  R20,LOW(0)
000100 e000      	LDI  R16,LOW(0)
000101 322d      	CPI  R18,45
000102 f411      	BRNE _0x2000021
000103 e001      	LDI  R16,LOW(1)
000104 c0fc      	RJMP _0x200001B
                 _0x2000021:
000105 322b      	CPI  R18,43
000106 f411      	BRNE _0x2000022
000107 e24b      	LDI  R20,LOW(43)
000108 c0f8      	RJMP _0x200001B
                 _0x2000022:
000109 3220      	CPI  R18,32
00010a f411      	BRNE _0x2000023
00010b e240      	LDI  R20,LOW(32)
00010c c0f4      	RJMP _0x200001B
                 _0x2000023:
00010d c002      	RJMP _0x2000024
                 _0x200001F:
00010e 30e2      	CPI  R30,LOW(0x2)
00010f f439      	BRNE _0x2000025
                 _0x2000024:
000110 e050      	LDI  R21,LOW(0)
000111 e013      	LDI  R17,LOW(3)
000112 3320      	CPI  R18,48
000113 f411      	BRNE _0x2000026
000114 6800      	ORI  R16,LOW(128)
000115 c0eb      	RJMP _0x200001B
                 _0x2000026:
000116 c003      	RJMP _0x2000027
                 _0x2000025:
000117 30e3      	CPI  R30,LOW(0x3)
000118 f009      	BREQ PC+2
000119 c0e7      	RJMP _0x200001B
                 _0x2000027:
00011a 3320      	CPI  R18,48
00011b f010      	BRLO _0x200002A
00011c 332a      	CPI  R18,58
00011d f008      	BRLO _0x200002B
                 _0x200002A:
00011e c007      	RJMP _0x2000029
                 _0x200002B:
00011f e0aa      	LDI  R26,LOW(10)
000120 9f5a      	MUL  R21,R26
000121 2d50      	MOV  R21,R0
000122 2fe2      	MOV  R30,R18
000123 53e0      	SUBI R30,LOW(48)
000124 0f5e      	ADD  R21,R30
000125 c0db      	RJMP _0x200001B
                 _0x2000029:
000126 2fe2      	MOV  R30,R18
000127 36e3      	CPI  R30,LOW(0x63)
000128 f449      	BRNE _0x200002F
000129 940e 02ea 	CALL SUBOPT_0x1
00012b 89e8      	LDD  R30,Y+16
00012c 89f9      	LDD  R31,Y+16+1
00012d 81a4      	LDD  R26,Z+4
00012e 93aa      	ST   -Y,R26
00012f 940e 02f0 	CALL SUBOPT_0x2
000131 c0ce      	RJMP _0x2000030
                 _0x200002F:
000132 37e3      	CPI  R30,LOW(0x73)
000133 f441      	BRNE _0x2000032
000134 940e 02ea 	CALL SUBOPT_0x1
000136 940e 02f6 	CALL SUBOPT_0x3
000138 940e 02ca 	CALL _strlen
00013a 2f1e      	MOV  R17,R30
00013b c00a      	RJMP _0x2000033
                 _0x2000032:
00013c 37e0      	CPI  R30,LOW(0x70)
00013d f461      	BRNE _0x2000035
00013e 940e 02ea 	CALL SUBOPT_0x1
000140 940e 02f6 	CALL SUBOPT_0x3
000142 940e 02d6 	CALL _strlenf
000144 2f1e      	MOV  R17,R30
000145 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000146 6002      	ORI  R16,LOW(2)
000147 770f      	ANDI R16,LOW(127)
000148 e030      	LDI  R19,LOW(0)
000149 c034      	RJMP _0x2000036
                 _0x2000035:
00014a 36e4      	CPI  R30,LOW(0x64)
00014b f011      	BREQ _0x2000039
00014c 36e9      	CPI  R30,LOW(0x69)
00014d f411      	BRNE _0x200003A
                 _0x2000039:
00014e 6004      	ORI  R16,LOW(4)
00014f c002      	RJMP _0x200003B
                 _0x200003A:
000150 37e5      	CPI  R30,LOW(0x75)
000151 f431      	BRNE _0x200003C
                 _0x200003B:
000152 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000153 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000154 83ee      	STD  Y+6,R30
000155 83ff      	STD  Y+6+1,R31
000156 e015      	LDI  R17,LOW(5)
000157 c00c      	RJMP _0x200003D
                 _0x200003C:
000158 35e8      	CPI  R30,LOW(0x58)
000159 f411      	BRNE _0x200003F
00015a 6008      	ORI  R16,LOW(8)
00015b c003      	RJMP _0x2000040
                 _0x200003F:
00015c 37e8      	CPI  R30,LOW(0x78)
00015d f009      	BREQ PC+2
00015e c0a1      	RJMP _0x2000071
                 _0x2000040:
00015f e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000160 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000161 83ee      	STD  Y+6,R30
000162 83ff      	STD  Y+6+1,R31
000163 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000164 ff02      	SBRS R16,2
000165 c014      	RJMP _0x2000042
000166 940e 02ea 	CALL SUBOPT_0x1
000168 940e 0300 	CALL SUBOPT_0x4
00016a 85ab      	LDD  R26,Y+11
00016b 23aa      	TST  R26
00016c f43a      	BRPL _0x2000043
00016d 85ea      	LDD  R30,Y+10
00016e 85fb      	LDD  R31,Y+10+1
00016f 940e 032a 	CALL __ANEGW1
000171 87ea      	STD  Y+10,R30
000172 87fb      	STD  Y+10+1,R31
000173 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000174 3040      	CPI  R20,0
000175 f011      	BREQ _0x2000044
000176 5f1f      	SUBI R17,-LOW(1)
000177 c001      	RJMP _0x2000045
                 _0x2000044:
000178 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000179 c004      	RJMP _0x2000046
                 _0x2000042:
00017a 940e 02ea 	CALL SUBOPT_0x1
00017c 940e 0300 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
00017e fd00      	SBRC R16,0
00017f c011      	RJMP _0x2000047
                 _0x2000048:
000180 1715      	CP   R17,R21
000181 f478      	BRSH _0x200004A
000182 ff07      	SBRS R16,7
000183 c008      	RJMP _0x200004B
000184 ff02      	SBRS R16,2
000185 c004      	RJMP _0x200004C
000186 7f0b      	ANDI R16,LOW(251)
000187 2f24      	MOV  R18,R20
000188 5011      	SUBI R17,LOW(1)
000189 c001      	RJMP _0x200004D
                 _0x200004C:
00018a e320      	LDI  R18,LOW(48)
                 _0x200004D:
00018b c001      	RJMP _0x200004E
                 _0x200004B:
00018c e220      	LDI  R18,LOW(32)
                 _0x200004E:
00018d 940e 02e3 	CALL SUBOPT_0x0
00018f 5051      	SUBI R21,LOW(1)
000190 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000191 2f31      	MOV  R19,R17
000192 ff01      	SBRS R16,1
000193 c017      	RJMP _0x200004F
                 _0x2000050:
000194 3030      	CPI  R19,0
000195 f0a1      	BREQ _0x2000052
000196 ff03      	SBRS R16,3
000197 c006      	RJMP _0x2000053
000198 81ee      	LDD  R30,Y+6
000199 81ff      	LDD  R31,Y+6+1
00019a 9125      	LPM  R18,Z+
00019b 83ee      	STD  Y+6,R30
00019c 83ff      	STD  Y+6+1,R31
00019d c005      	RJMP _0x2000054
                 _0x2000053:
00019e 81ae      	LDD  R26,Y+6
00019f 81bf      	LDD  R27,Y+6+1
0001a0 912d      	LD   R18,X+
0001a1 83ae      	STD  Y+6,R26
0001a2 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001a3 940e 02e3 	CALL SUBOPT_0x0
0001a5 3050      	CPI  R21,0
0001a6 f009      	BREQ _0x2000055
0001a7 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001a8 5031      	SUBI R19,LOW(1)
0001a9 cfea      	RJMP _0x2000050
                 _0x2000052:
0001aa c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001ab e320      	LDI  R18,LOW(48)
0001ac 81ee      	LDD  R30,Y+6
0001ad 81ff      	LDD  R31,Y+6+1
0001ae 940e 0332 	CALL __GETW1PF
0001b0 87e8      	STD  Y+8,R30
0001b1 87f9      	STD  Y+8+1,R31
0001b2 81ee      	LDD  R30,Y+6
0001b3 81ff      	LDD  R31,Y+6+1
0001b4 9632      	ADIW R30,2
0001b5 83ee      	STD  Y+6,R30
0001b6 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001b7 85e8      	LDD  R30,Y+8
0001b8 85f9      	LDD  R31,Y+8+1
0001b9 85aa      	LDD  R26,Y+10
0001ba 85bb      	LDD  R27,Y+10+1
0001bb 17ae      	CP   R26,R30
0001bc 07bf      	CPC  R27,R31
0001bd f050      	BRLO _0x200005C
0001be 5f2f      	SUBI R18,-LOW(1)
0001bf 85a8      	LDD  R26,Y+8
0001c0 85b9      	LDD  R27,Y+8+1
0001c1 85ea      	LDD  R30,Y+10
0001c2 85fb      	LDD  R31,Y+10+1
0001c3 1bea      	SUB  R30,R26
0001c4 0bfb      	SBC  R31,R27
0001c5 87ea      	STD  Y+10,R30
0001c6 87fb      	STD  Y+10+1,R31
0001c7 cfef      	RJMP _0x200005A
                 _0x200005C:
0001c8 332a      	CPI  R18,58
0001c9 f028      	BRLO _0x200005D
0001ca ff03      	SBRS R16,3
0001cb c002      	RJMP _0x200005E
0001cc 5f29      	SUBI R18,-LOW(7)
0001cd c001      	RJMP _0x200005F
                 _0x200005E:
0001ce 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001cf fd04      	SBRC R16,4
0001d0 c01a      	RJMP _0x2000061
0001d1 3321      	CPI  R18,49
0001d2 f420      	BRSH _0x2000063
0001d3 85a8      	LDD  R26,Y+8
0001d4 85b9      	LDD  R27,Y+8+1
0001d5 9711      	SBIW R26,1
0001d6 f409      	BRNE _0x2000062
                 _0x2000063:
0001d7 c009      	RJMP _0x20000CD
                 _0x2000062:
0001d8 1753      	CP   R21,R19
0001d9 f010      	BRLO _0x2000067
0001da ff00      	SBRS R16,0
0001db c001      	RJMP _0x2000068
                 _0x2000067:
0001dc c013      	RJMP _0x2000066
                 _0x2000068:
0001dd e220      	LDI  R18,LOW(32)
0001de ff07      	SBRS R16,7
0001df c00b      	RJMP _0x2000069
0001e0 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0001e1 6100      	ORI  R16,LOW(16)
0001e2 ff02      	SBRS R16,2
0001e3 c007      	RJMP _0x200006A
0001e4 7f0b      	ANDI R16,LOW(251)
0001e5 934a      	ST   -Y,R20
0001e6 940e 02f0 	CALL SUBOPT_0x2
0001e8 3050      	CPI  R21,0
0001e9 f009      	BREQ _0x200006B
0001ea 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001eb 940e 02e3 	CALL SUBOPT_0x0
0001ed 3050      	CPI  R21,0
0001ee f009      	BREQ _0x200006C
0001ef 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001f0 5031      	SUBI R19,LOW(1)
0001f1 85a8      	LDD  R26,Y+8
0001f2 85b9      	LDD  R27,Y+8+1
0001f3 9712      	SBIW R26,2
0001f4 f008      	BRLO _0x2000059
0001f5 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0001f6 ff00      	SBRS R16,0
0001f7 c008      	RJMP _0x200006D
                 _0x200006E:
0001f8 3050      	CPI  R21,0
0001f9 f031      	BREQ _0x2000070
0001fa 5051      	SUBI R21,LOW(1)
0001fb e2e0      	LDI  R30,LOW(32)
0001fc 93ea      	ST   -Y,R30
0001fd 940e 02f0 	CALL SUBOPT_0x2
0001ff cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000200 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000201 cee0      	RJMP _0x2000016
                 _0x2000018:
000202 85ac      	LDD  R26,Y+12
000203 85bd      	LDD  R27,Y+12+1
000204 940e 032e 	CALL __GETW1P
000206 940e 0342 	CALL __LOADLOCR6
000208 9664      	ADIW R28,20
000209 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00020a 92ff      	PUSH R15
00020b 2ef8      	MOV  R15,R24
00020c 9726      	SBIW R28,6
00020d 940e 033d 	CALL __SAVELOCR4
00020f 940e 0308 	CALL SUBOPT_0x5
000211 9730      	SBIW R30,0
000212 f419      	BRNE _0x2000072
000213 efef      	LDI  R30,LOW(65535)
000214 efff      	LDI  R31,HIGH(65535)
000215 c023      	RJMP _0x2080002
                 _0x2000072:
000216 01de      	MOVW R26,R28
000217 9616      	ADIW R26,6
000218 940e 0326 	CALL __ADDW2R15
00021a 018d      	MOVW R16,R26
00021b 940e 0308 	CALL SUBOPT_0x5
00021d 83ee      	STD  Y+6,R30
00021e 83ff      	STD  Y+6+1,R31
00021f e0e0      	LDI  R30,LOW(0)
000220 87e8      	STD  Y+8,R30
000221 87e9      	STD  Y+8+1,R30
000222 01de      	MOVW R26,R28
000223 961a      	ADIW R26,10
000224 940e 0326 	CALL __ADDW2R15
000226 940e 032e 	CALL __GETW1P
000228 93fa      	ST   -Y,R31
000229 93ea      	ST   -Y,R30
00022a 931a      	ST   -Y,R17
00022b 930a      	ST   -Y,R16
00022c e9e6      	LDI  R30,LOW(_put_buff_G100)
00022d e0f0      	LDI  R31,HIGH(_put_buff_G100)
00022e 93fa      	ST   -Y,R31
00022f 93ea      	ST   -Y,R30
000230 01de      	MOVW R26,R28
000231 961a      	ADIW R26,10
000232 dea3      	RCALL __print_G100
000233 019f      	MOVW R18,R30
000234 81ae      	LDD  R26,Y+6
000235 81bf      	LDD  R27,Y+6+1
000236 e0e0      	LDI  R30,LOW(0)
000237 93ec      	ST   X,R30
000238 01f9      	MOVW R30,R18
                 _0x2080002:
000239 940e 0344 	CALL __LOADLOCR4
00023b 962a      	ADIW R28,10
00023c 90ff      	POP  R15
00023d 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
00023e 93aa      	ST   -Y,R26
00023f b3eb      	IN   R30,0x1B
000240 70ef      	ANDI R30,LOW(0xF)
000241 2fae      	MOV  R26,R30
000242 81e8      	LD   R30,Y
000243 7fe0      	ANDI R30,LOW(0xF0)
000244 2bea      	OR   R30,R26
000245 bbeb      	OUT  0x1B,R30
                +
000246 e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
000247 958a     +DEC R24
000248 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000249 9ada      	SBI  0x1B,2
                +
00024a e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00024b 958a     +DEC R24
00024c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
00024d 98da      	CBI  0x1B,2
                +
00024e e082     +LDI R24 , LOW ( 2 )
                +__DELAY_USB_LOOP :
00024f 958a     +DEC R24
000250 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 2
000251 c076      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000252 93aa      	ST   -Y,R26
000253 81a8      	LD   R26,Y
000254 dfe9      	RCALL __lcd_write_nibble_G101
000255 81e8          ld    r30,y
000256 95e2          swap  r30
000257 83e8          st    y,r30
000258 81a8      	LD   R26,Y
000259 dfe4      	RCALL __lcd_write_nibble_G101
                +
00025a e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
00025b 958a     +DEC R24
00025c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00025d c06a      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00025e 93aa      	ST   -Y,R26
00025f 81e8      	LD   R30,Y
000260 e0f0      	LDI  R31,0
000261 58e0      	SUBI R30,LOW(-__base_y_G101)
000262 4ffe      	SBCI R31,HIGH(-__base_y_G101)
000263 81e0      	LD   R30,Z
000264 81a9      	LDD  R26,Y+1
000265 0fae      	ADD  R26,R30
000266 dfeb      	RCALL __lcd_write_data
000267 8049      	LDD  R4,Y+1
000268 8078      	LDD  R7,Y+0
000269 9622      	ADIW R28,2
00026a 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00026b e0a2      	LDI  R26,LOW(2)
00026c 940e 030f 	CALL SUBOPT_0x6
00026e e0ac      	LDI  R26,LOW(12)
00026f dfe2      	RCALL __lcd_write_data
000270 e0a1      	LDI  R26,LOW(1)
000271 940e 030f 	CALL SUBOPT_0x6
000273 e0e0      	LDI  R30,LOW(0)
000274 2e7e      	MOV  R7,R30
000275 2e4e      	MOV  R4,R30
000276 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000277 93aa      	ST   -Y,R26
000278 81a8      	LD   R26,Y
000279 30aa      	CPI  R26,LOW(0xA)
00027a f011      	BREQ _0x2020005
00027b 1446      	CP   R4,R6
00027c f048      	BRLO _0x2020004
                 _0x2020005:
00027d e0e0      	LDI  R30,LOW(0)
00027e 93ea      	ST   -Y,R30
00027f 9473      	INC  R7
000280 2da7      	MOV  R26,R7
000281 dfdc      	RCALL _lcd_gotoxy
000282 81a8      	LD   R26,Y
000283 30aa      	CPI  R26,LOW(0xA)
000284 f409      	BRNE _0x2020007
000285 c042      	RJMP _0x2080001
                 _0x2020007:
                 _0x2020004:
000286 9443      	INC  R4
000287 9ad8      	SBI  0x1B,0
000288 81a8      	LD   R26,Y
000289 dfc8      	RCALL __lcd_write_data
00028a 98d8      	CBI  0x1B,0
00028b c03c      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00028c 93ba      	ST   -Y,R27
00028d 93aa      	ST   -Y,R26
00028e 931a      	ST   -Y,R17
                 _0x2020008:
00028f 81a9      	LDD  R26,Y+1
000290 81ba      	LDD  R27,Y+1+1
000291 91ed      	LD   R30,X+
000292 83a9      	STD  Y+1,R26
000293 83ba      	STD  Y+1+1,R27
000294 2f1e      	MOV  R17,R30
000295 30e0      	CPI  R30,0
000296 f019      	BREQ _0x202000A
000297 2fa1      	MOV  R26,R17
000298 dfde      	RCALL _lcd_putchar
000299 cff5      	RJMP _0x2020008
                 _0x202000A:
00029a 8118      	LDD  R17,Y+0
00029b 9623      	ADIW R28,3
00029c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00029d 93aa      	ST   -Y,R26
00029e b3ea      	IN   R30,0x1A
00029f 6fe0      	ORI  R30,LOW(0xF0)
0002a0 bbea      	OUT  0x1A,R30
0002a1 9ad2      	SBI  0x1A,2
0002a2 9ad0      	SBI  0x1A,0
0002a3 9ad1      	SBI  0x1A,1
0002a4 98da      	CBI  0x1B,2
0002a5 98d8      	CBI  0x1B,0
0002a6 98d9      	CBI  0x1B,1
0002a7 8068      	LDD  R6,Y+0
0002a8 81e8      	LD   R30,Y
0002a9 58e0      	SUBI R30,-LOW(128)
                +
0002aa 93e0 0182+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0002ac 81e8      	LD   R30,Y
0002ad 54e0      	SUBI R30,-LOW(192)
                +
0002ae 93e0 0183+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0002b0 e1a4      	LDI  R26,LOW(20)
0002b1 e0b0      	LDI  R27,0
0002b2 940e 031c 	CALL _delay_ms
0002b4 940e 0315 	CALL SUBOPT_0x7
0002b6 940e 0315 	CALL SUBOPT_0x7
0002b8 940e 0315 	CALL SUBOPT_0x7
0002ba e2a0      	LDI  R26,LOW(32)
0002bb df82      	RCALL __lcd_write_nibble_G101
                +
0002bc e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
0002bd 958a     +DEC R24
0002be f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
0002bf e2a8      	LDI  R26,LOW(40)
0002c0 df91      	RCALL __lcd_write_data
0002c1 e0a4      	LDI  R26,LOW(4)
0002c2 df8f      	RCALL __lcd_write_data
0002c3 e8a5      	LDI  R26,LOW(133)
0002c4 df8d      	RCALL __lcd_write_data
0002c5 e0a6      	LDI  R26,LOW(6)
0002c6 df8b      	RCALL __lcd_write_data
0002c7 dfa3      	RCALL _lcd_clear
                 _0x2080001:
0002c8 9621      	ADIW R28,1
0002c9 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002ca 93ba      	ST   -Y,R27
0002cb 93aa      	ST   -Y,R26
0002cc 91a9          ld   r26,y+
0002cd 91b9          ld   r27,y+
0002ce 27ee          clr  r30
0002cf 27ff          clr  r31
                 strlen0:
0002d0 916d          ld   r22,x+
0002d1 2366          tst  r22
0002d2 f011          breq strlen1
0002d3 9631          adiw r30,1
0002d4 cffb          rjmp strlen0
                 strlen1:
0002d5 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002d6 93ba      	ST   -Y,R27
0002d7 93aa      	ST   -Y,R26
0002d8 27aa          clr  r26
0002d9 27bb          clr  r27
0002da 91e9          ld   r30,y+
0002db 91f9          ld   r31,y+
                 strlenf0:
0002dc 9005      	lpm  r0,z+
0002dd 2000          tst  r0
0002de f011          breq strlenf1
0002df 9611          adiw r26,1
0002e0 cffb          rjmp strlenf0
                 strlenf1:
0002e1 01fd          movw r30,r26
0002e2 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _lcd_buffer:
000160           	.BYTE 0x20
                 __base_y_G101:
000180           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
0002e3 932a      	ST   -Y,R18
0002e4 85ad      	LDD  R26,Y+13
0002e5 85be      	LDD  R27,Y+13+1
0002e6 85ef      	LDD  R30,Y+15
0002e7 89f8      	LDD  R31,Y+15+1
0002e8 9509      	ICALL
0002e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
0002ea 89e8      	LDD  R30,Y+16
0002eb 89f9      	LDD  R31,Y+16+1
0002ec 9734      	SBIW R30,4
0002ed 8be8      	STD  Y+16,R30
0002ee 8bf9      	STD  Y+16+1,R31
0002ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0002f0 85ad      	LDD  R26,Y+13
0002f1 85be      	LDD  R27,Y+13+1
0002f2 85ef      	LDD  R30,Y+15
0002f3 89f8      	LDD  R31,Y+15+1
0002f4 9509      	ICALL
0002f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
0002f6 89a8      	LDD  R26,Y+16
0002f7 89b9      	LDD  R27,Y+16+1
0002f8 9614      	ADIW R26,4
0002f9 940e 032e 	CALL __GETW1P
0002fb 83ee      	STD  Y+6,R30
0002fc 83ff      	STD  Y+6+1,R31
0002fd 81ae      	LDD  R26,Y+6
0002fe 81bf      	LDD  R27,Y+6+1
0002ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000300 89a8      	LDD  R26,Y+16
000301 89b9      	LDD  R27,Y+16+1
000302 9614      	ADIW R26,4
000303 940e 032e 	CALL __GETW1P
000305 87ea      	STD  Y+10,R30
000306 87fb      	STD  Y+10+1,R31
000307 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000308 01de      	MOVW R26,R28
000309 961c      	ADIW R26,12
00030a 940e 0326 	CALL __ADDW2R15
00030c 940e 032e 	CALL __GETW1P
00030e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
00030f 940e 0252 	CALL __lcd_write_data
000311 e0a3      	LDI  R26,LOW(3)
000312 e0b0      	LDI  R27,0
000313 940c 031c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000315 e3a0      	LDI  R26,LOW(48)
000316 940e 023e 	CALL __lcd_write_nibble_G101
                +
000318 e281     +LDI R24 , LOW ( 33 )
                +__DELAY_USB_LOOP :
000319 958a     +DEC R24
00031a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 33
00031b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00031c 9610      	adiw r26,0
00031d f039      	breq __delay_ms1
                 __delay_ms0:
00031e 95a8      	wdr
                +
00031f ef8a     +LDI R24 , LOW ( 0xFA )
000320 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000321 9701     +SBIW R24 , 1
000322 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000323 9711      	sbiw r26,1
000324 f7c9      	brne __delay_ms0
                 __delay_ms1:
000325 9508      	ret
                 
                 __ADDW2R15:
000326 2400      	CLR  R0
000327 0daf      	ADD  R26,R15
000328 1db0      	ADC  R27,R0
000329 9508      	RET
                 
                 __ANEGW1:
00032a 95f1      	NEG  R31
00032b 95e1      	NEG  R30
00032c 40f0      	SBCI R31,0
00032d 9508      	RET
                 
                 __GETW1P:
00032e 91ed      	LD   R30,X+
00032f 91fc      	LD   R31,X
000330 9711      	SBIW R26,1
000331 9508      	RET
                 
                 __GETW1PF:
000332 9005      	LPM  R0,Z+
000333 91f4      	LPM  R31,Z
000334 2de0      	MOV  R30,R0
000335 9508      	RET
                 
                 __PUTPARD1:
000336 937a      	ST   -Y,R23
000337 936a      	ST   -Y,R22
000338 93fa      	ST   -Y,R31
000339 93ea      	ST   -Y,R30
00033a 9508      	RET
                 
                 __SAVELOCR6:
00033b 935a      	ST   -Y,R21
                 __SAVELOCR5:
00033c 934a      	ST   -Y,R20
                 __SAVELOCR4:
00033d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00033e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00033f 931a      	ST   -Y,R17
000340 930a      	ST   -Y,R16
000341 9508      	RET
                 
                 __LOADLOCR6:
000342 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000343 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000344 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000345 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000346 8119      	LDD  R17,Y+1
000347 8108      	LD   R16,Y
000348 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   3 r26:  98 r27:  38 r28:  14 r29:   1 r30: 150 r31:  58 
x  :  23 y  : 166 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  52 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   2 jmp   :  23 ld    :  25 ldd   :  77 ldi   :  85 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  18 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   8 out   :   9 pop   :   1 push  :   1 rcall :  14 ret   :  24 
reti  :   0 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  17 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  59 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000692   1636     46   1682   16384  10.3%
[.dseg] 0x000060 0x000184      0     36     36    1024   3.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
