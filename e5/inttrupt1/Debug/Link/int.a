;/*
; * int.c
; *
; * Created: 5/22/2025 7:04:00 PM
; * Author: Asus
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <stdio.h>
;#include <stdint.h>
;#include <delay.h>
;#define LED_ON (PORTD= PIND | 0x01)
;#define LED_OFF (PORTD= PIND & (~(0x01)))
;#define BUTTON_PUSHED ((PINB >> 2) & 0x01)
;
;char lcd_buffer[32];
;uint8_t counter=0;
;
;interrupt [19] void EXI2 (void)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     GIFR = GIFR & (~ (0x20));
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017     counter++;
;PCODE: $00000012 VOL: 0
; 0000 0018 
; 0000 0019 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;void main(void)
; 0000 001C {
;PCODE: $00000016 VOL: 0
; 0000 001D DDRD=255;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001E DDRB=0;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001F PORTB=255;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0020 GICR = GICR | (1<<5);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0021 //PORTD=0x01;
; 0000 0022 lcd_init(16);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0023 # asm ("SEI")
;PCODE: $00000022 VOL: 0
	SEI
;PCODE: $00000023 VOL: 0
; 0000 0024 while (1)
;PCODE: $00000024 VOL: 0
; 0000 0025     {
; 0000 0026     /*
; 0000 0027     if(BUTTON_PUSHED == 0 )
; 0000 0028     {
; 0000 0029         counter++;
; 0000 002A         if(counter>200)
; 0000 002B             counter=0;
; 0000 002C         while( BUTTON_PUSHED==0){}
; 0000 002D     }
; 0000 002E     */
; 0000 002F     // Please write your application code here
; 0000 0030     //if(PIND==0x00)
; 0000 0031     //counter++;
; 0000 0032     //if(counter>200)
; 0000 0033       // counter=0;
; 0000 0034     sprintf(lcd_buffer,"counter=%03d",counter);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0035     lcd_puts(lcd_buffer);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0036     LED_ON;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0037     delay_ms(200);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0038     LED_OFF;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0039     delay_ms(200);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003A     lcd_clear();
;PCODE: $0000003F VOL: 0
; 0000 003B     }
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 003C }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
