
AVRASM ver. 2.1.30  C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm Thu May 22 19:49:58 2025

C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm(1090): warning: Register r7 already defined by the .DEF directive
C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm(1091): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _counter=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0043 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0070 	JMP  _EXI2
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm(1130): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x0
                 
                 _0x0:
000034 6f63
000035 6e75
000036 6574
000037 3d72      	.DB  0x63,0x6F,0x75,0x6E,0x74,0x65,0x72,0x3D
000038 3025
000039 6433
C:\Users\Asus\Desktop\Class\e5\inttrupt1\Debug\List\int.asm(1134): warning: .cseg .db misalignment - padding zero byte
00003a 0000      	.DB  0x25,0x30,0x33,0x64,0x0
                 _0x2000003:
00003b c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003c 0001      	.DW  0x01
00003d 0005      	.DW  0x05
00003e 0066      	.DW  __REG_VARS*2
                 
00003f 0002      	.DW  0x02
000040 0180      	.DW  __base_y_G100
000041 0076      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000042 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000043 94f8      	CLI
000044 27ee      	CLR  R30
000045 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000046 e0f1      	LDI  R31,1
000047 bffb      	OUT  GICR,R31
000048 bfeb      	OUT  GICR,R30
000049 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004a e08d      	LDI  R24,(14-2)+1
00004b e0a2      	LDI  R26,2
00004c 27bb      	CLR  R27
                 __CLEAR_REG:
00004d 93ed      	ST   X+,R30
00004e 958a      	DEC  R24
00004f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000050 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000051 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000052 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000053 93ed      	ST   X+,R30
000054 9701      	SBIW R24,1
000055 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000056 e7e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000057 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000058 9185      	LPM  R24,Z+
000059 9195      	LPM  R25,Z+
00005a 9700      	SBIW R24,0
00005b f061      	BREQ __GLOBAL_INI_END
00005c 91a5      	LPM  R26,Z+
00005d 91b5      	LPM  R27,Z+
00005e 9005      	LPM  R0,Z+
00005f 9015      	LPM  R1,Z+
000060 01bf      	MOVW R22,R30
000061 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000062 9005      	LPM  R0,Z+
000063 920d      	ST   X+,R0
000064 9701      	SBIW R24,1
000065 f7e1      	BRNE __GLOBAL_INI_LOOP
000066 01fb      	MOVW R30,R22
000067 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000068 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000069 bfed      	OUT  SPL,R30
00006a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006e 940c 007b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * int.c
                 ; *
                 ; * Created: 5/22/2025 7:04:00 PM
                 ; * Author: Asus
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <stdint.h>
                 ;#include <delay.h>
                 ;#define LED_ON (PORTD= PIND | 0x01)
                 ;#define LED_OFF (PORTD= PIND & (~(0x01)))
                 ;#define BUTTON_PUSHED ((PINB >> 2) & 0x01)
                 ;
                 ;char lcd_buffer[32];
                 ;uint8_t counter=0;
                 ;
                 ;interrupt [19] void EXI2 (void)
                 ; 0000 0015 {
                 
                 	.CSEG
                 _EXI2:
                 ; .FSTART _EXI2
000070 93ea      	ST   -Y,R30
000071 b7ef      	IN   R30,SREG
000072 93ea      	ST   -Y,R30
                 ; 0000 0016     GIFR = GIFR & (~ (0x20));
000073 b7ea      	IN   R30,0x3A
000074 7def      	ANDI R30,0xDF
000075 bfea      	OUT  0x3A,R30
                 ; 0000 0017     counter++;
000076 9453      	INC  R5
                 ; 0000 0018 
                 ; 0000 0019 }
000077 91e9      	LD   R30,Y+
000078 bfef      	OUT  SREG,R30
000079 91e9      	LD   R30,Y+
00007a 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 001C {
                 _main:
                 ; .FSTART _main
                 ; 0000 001D DDRD=255;
00007b efef      	LDI  R30,LOW(255)
00007c bbe1      	OUT  0x11,R30
                 ; 0000 001E DDRB=0;
00007d e0e0      	LDI  R30,LOW(0)
00007e bbe7      	OUT  0x17,R30
                 ; 0000 001F PORTB=255;
00007f efef      	LDI  R30,LOW(255)
000080 bbe8      	OUT  0x18,R30
                 ; 0000 0020 GICR = GICR | (1<<5);
000081 b7eb      	IN   R30,0x3B
000082 62e0      	ORI  R30,0x20
000083 bfeb      	OUT  0x3B,R30
                 ; 0000 0021 //PORTD=0x01;
                 ; 0000 0022 lcd_init(16);
000084 e1a0      	LDI  R26,LOW(16)
000085 d086      	RCALL _lcd_init
                 ; 0000 0023 # asm ("SEI")
000086 9478      	SEI
                 ; 0000 0024 while (1)
                 _0x3:
                 ; 0000 0025     {
                 ; 0000 0026     /*
                 ; 0000 0027     if(BUTTON_PUSHED == 0 )
                 ; 0000 0028     {
                 ; 0000 0029         counter++;
                 ; 0000 002A         if(counter>200)
                 ; 0000 002B             counter=0;
                 ; 0000 002C         while( BUTTON_PUSHED==0){}
                 ; 0000 002D     }
                 ; 0000 002E     */
                 ; 0000 002F     // Please write your application code here
                 ; 0000 0030     //if(PIND==0x00)
                 ; 0000 0031     //counter++;
                 ; 0000 0032     //if(counter>200)
                 ; 0000 0033       // counter=0;
                 ; 0000 0034     sprintf(lcd_buffer,"counter=%03d",counter);
000087 e6e0      	LDI  R30,LOW(_lcd_buffer)
000088 e0f1      	LDI  R31,HIGH(_lcd_buffer)
000089 93fa      	ST   -Y,R31
00008a 93ea      	ST   -Y,R30
                +
00008b e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00008c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008d 93fa      	ST   -Y,R31
00008e 93ea      	ST   -Y,R30
00008f 2de5      	MOV  R30,R5
000090 27ff      	CLR  R31
000091 2766      	CLR  R22
000092 2777      	CLR  R23
000093 940e 034f 	CALL __PUTPARD1
000095 e084      	LDI  R24,4
000096 940e 02ae 	CALL _sprintf
000098 9628      	ADIW R28,8
                 ; 0000 0035     lcd_puts(lcd_buffer);
000099 e6a0      	LDI  R26,LOW(_lcd_buffer)
00009a e0b1      	LDI  R27,HIGH(_lcd_buffer)
00009b d05f      	RCALL _lcd_puts
                 ; 0000 0036     LED_ON;
00009c b3e0      	IN   R30,0x10
00009d 60e1      	ORI  R30,1
00009e bbe2      	OUT  0x12,R30
                 ; 0000 0037     delay_ms(200);
00009f eca8      	LDI  R26,LOW(200)
0000a0 e0b0      	LDI  R27,0
0000a1 940e 0335 	CALL _delay_ms
                 ; 0000 0038     LED_OFF;
0000a3 b3e0      	IN   R30,0x10
0000a4 7fee      	ANDI R30,0xFE
0000a5 bbe2      	OUT  0x12,R30
                 ; 0000 0039     delay_ms(200);
0000a6 eca8      	LDI  R26,LOW(200)
0000a7 e0b0      	LDI  R27,0
0000a8 940e 0335 	CALL _delay_ms
                 ; 0000 003A     lcd_clear();
0000aa d02f      	RCALL _lcd_clear
                 ; 0000 003B     }
0000ab cfdb      	RJMP _0x3
                 ; 0000 003C }
                 _0x6:
0000ac cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000ad 93aa      	ST   -Y,R26
0000ae b3eb      	IN   R30,0x1B
0000af 70ef      	ANDI R30,LOW(0xF)
0000b0 2fae      	MOV  R26,R30
0000b1 81e8      	LD   R30,Y
0000b2 7fe0      	ANDI R30,LOW(0xF0)
0000b3 2bea      	OR   R30,R26
0000b4 bbeb      	OUT  0x1B,R30
                +
0000b5 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b6 958a     +DEC R24
0000b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b8 9ada      	SBI  0x1B,2
                +
0000b9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ba 958a     +DEC R24
0000bb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000bc 98da      	CBI  0x1B,2
                +
0000bd e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000be 958a     +DEC R24
0000bf f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000c0 c077      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000c1 93aa      	ST   -Y,R26
0000c2 81a8      	LD   R26,Y
0000c3 dfe9      	RCALL __lcd_write_nibble_G100
0000c4 81e8          ld    r30,y
0000c5 95e2          swap  r30
0000c6 83e8          st    y,r30
0000c7 81a8      	LD   R26,Y
0000c8 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000c9 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000ca 958a     +DEC R24
0000cb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000cc c06b      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000cd 93aa      	ST   -Y,R26
0000ce 81e8      	LD   R30,Y
0000cf e0f0      	LDI  R31,0
0000d0 58e0      	SUBI R30,LOW(-__base_y_G100)
0000d1 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000d2 81e0      	LD   R30,Z
0000d3 81a9      	LDD  R26,Y+1
0000d4 0fae      	ADD  R26,R30
0000d5 dfeb      	RCALL __lcd_write_data
0000d6 8049      	LDD  R4,Y+1
0000d7 8078      	LDD  R7,Y+0
0000d8 9622      	ADIW R28,2
0000d9 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000da e0a2      	LDI  R26,LOW(2)
0000db 940e 02fb 	CALL SUBOPT_0x0
0000dd e0ac      	LDI  R26,LOW(12)
0000de dfe2      	RCALL __lcd_write_data
0000df e0a1      	LDI  R26,LOW(1)
0000e0 940e 02fb 	CALL SUBOPT_0x0
0000e2 e0e0      	LDI  R30,LOW(0)
0000e3 2e7e      	MOV  R7,R30
0000e4 2e4e      	MOV  R4,R30
0000e5 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000e6 93aa      	ST   -Y,R26
0000e7 81a8      	LD   R26,Y
0000e8 30aa      	CPI  R26,LOW(0xA)
0000e9 f011      	BREQ _0x2000005
0000ea 1446      	CP   R4,R6
0000eb f048      	BRLO _0x2000004
                 _0x2000005:
0000ec e0e0      	LDI  R30,LOW(0)
0000ed 93ea      	ST   -Y,R30
0000ee 9473      	INC  R7
0000ef 2da7      	MOV  R26,R7
0000f0 dfdc      	RCALL _lcd_gotoxy
0000f1 81a8      	LD   R26,Y
0000f2 30aa      	CPI  R26,LOW(0xA)
0000f3 f409      	BRNE _0x2000007
0000f4 c043      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
0000f5 9443      	INC  R4
0000f6 9ad8      	SBI  0x1B,0
0000f7 81a8      	LD   R26,Y
0000f8 dfc8      	RCALL __lcd_write_data
0000f9 98d8      	CBI  0x1B,0
0000fa c03d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000fb 93ba      	ST   -Y,R27
0000fc 93aa      	ST   -Y,R26
0000fd 931a      	ST   -Y,R17
                 _0x2000008:
0000fe 81a9      	LDD  R26,Y+1
0000ff 81ba      	LDD  R27,Y+1+1
000100 91ed      	LD   R30,X+
000101 83a9      	STD  Y+1,R26
000102 83ba      	STD  Y+1+1,R27
000103 2f1e      	MOV  R17,R30
000104 30e0      	CPI  R30,0
000105 f019      	BREQ _0x200000A
000106 2fa1      	MOV  R26,R17
000107 dfde      	RCALL _lcd_putchar
000108 cff5      	RJMP _0x2000008
                 _0x200000A:
000109 8118      	LDD  R17,Y+0
00010a 9623      	ADIW R28,3
00010b 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00010c 93aa      	ST   -Y,R26
00010d b3ea      	IN   R30,0x1A
00010e 6fe0      	ORI  R30,LOW(0xF0)
00010f bbea      	OUT  0x1A,R30
000110 9ad2      	SBI  0x1A,2
000111 9ad0      	SBI  0x1A,0
000112 9ad1      	SBI  0x1A,1
000113 98da      	CBI  0x1B,2
000114 98d8      	CBI  0x1B,0
000115 98d9      	CBI  0x1B,1
000116 8068      	LDD  R6,Y+0
000117 81e8      	LD   R30,Y
000118 58e0      	SUBI R30,-LOW(128)
                +
000119 93e0 0182+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00011b 81e8      	LD   R30,Y
00011c 54e0      	SUBI R30,-LOW(192)
                +
00011d 93e0 0183+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00011f e1a4      	LDI  R26,LOW(20)
000120 e0b0      	LDI  R27,0
000121 940e 0335 	CALL _delay_ms
000123 940e 0301 	CALL SUBOPT_0x1
000125 940e 0301 	CALL SUBOPT_0x1
000127 940e 0301 	CALL SUBOPT_0x1
000129 e2a0      	LDI  R26,LOW(32)
00012a df82      	RCALL __lcd_write_nibble_G100
                +
00012b ec88     +LDI R24 , LOW ( 200 )
00012c e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00012d 9701     +SBIW R24 , 1
00012e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00012f e2a8      	LDI  R26,LOW(40)
000130 df90      	RCALL __lcd_write_data
000131 e0a4      	LDI  R26,LOW(4)
000132 df8e      	RCALL __lcd_write_data
000133 e8a5      	LDI  R26,LOW(133)
000134 df8c      	RCALL __lcd_write_data
000135 e0a6      	LDI  R26,LOW(6)
000136 df8a      	RCALL __lcd_write_data
000137 dfa2      	RCALL _lcd_clear
                 _0x2080002:
000138 9621      	ADIW R28,1
000139 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00013a 93ba      	ST   -Y,R27
00013b 93aa      	ST   -Y,R26
00013c 931a      	ST   -Y,R17
00013d 930a      	ST   -Y,R16
00013e 81aa      	LDD  R26,Y+2
00013f 81bb      	LDD  R27,Y+2+1
000140 9612      	ADIW R26,2
000141 940e 0347 	CALL __GETW1P
000143 9730      	SBIW R30,0
000144 f159      	BREQ _0x2020010
000145 81aa      	LDD  R26,Y+2
000146 81bb      	LDD  R27,Y+2+1
000147 9614      	ADIW R26,4
000148 940e 0347 	CALL __GETW1P
00014a 018f      	MOVW R16,R30
00014b 9730      	SBIW R30,0
00014c f061      	BREQ _0x2020012
                +
00014d 3002     +CPI R16 , LOW ( 2 )
00014e e0e0     +LDI R30 , HIGH ( 2 )
00014f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000150 f098      	BRLO _0x2020013
000151 01f8      	MOVW R30,R16
000152 9731      	SBIW R30,1
000153 018f      	MOVW R16,R30
                +
000154 81aa     +LDD R26 , Y + 2
000155 81bb     +LDD R27 , Y + 2 + 1
000156 9614     +ADIW R26 , 4
000157 93ed     +ST X + , R30
000158 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000159 81aa      	LDD  R26,Y+2
00015a 81bb      	LDD  R27,Y+2+1
00015b 9612      	ADIW R26,2
00015c 91ed      	LD   R30,X+
00015d 91fd      	LD   R31,X+
00015e 9631      	ADIW R30,1
00015f 93fe      	ST   -X,R31
000160 93ee      	ST   -X,R30
000161 9731      	SBIW R30,1
000162 81ac      	LDD  R26,Y+4
000163 83a0      	STD  Z+0,R26
                 _0x2020013:
000164 81aa      	LDD  R26,Y+2
000165 81bb      	LDD  R27,Y+2+1
000166 940e 0347 	CALL __GETW1P
000168 23ff      	TST  R31
000169 f02a      	BRMI _0x2020014
00016a 91ed      	LD   R30,X+
00016b 91fd      	LD   R31,X+
00016c 9631      	ADIW R30,1
00016d 93fe      	ST   -X,R31
00016e 93ee      	ST   -X,R30
                 _0x2020014:
00016f c006      	RJMP _0x2020015
                 _0x2020010:
000170 81aa      	LDD  R26,Y+2
000171 81bb      	LDD  R27,Y+2+1
000172 efef      	LDI  R30,LOW(65535)
000173 efff      	LDI  R31,HIGH(65535)
000174 93ed      	ST   X+,R30
000175 93fc      	ST   X,R31
                 _0x2020015:
000176 8119      	LDD  R17,Y+1
000177 8108      	LDD  R16,Y+0
000178 9625      	ADIW R28,5
000179 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00017a 93ba      	ST   -Y,R27
00017b 93aa      	ST   -Y,R26
00017c 9726      	SBIW R28,6
00017d 940e 0354 	CALL __SAVELOCR6
00017f e010      	LDI  R17,0
000180 85ac      	LDD  R26,Y+12
000181 85bd      	LDD  R27,Y+12+1
000182 e0e0      	LDI  R30,LOW(0)
000183 e0f0      	LDI  R31,HIGH(0)
000184 93ed      	ST   X+,R30
000185 93fc      	ST   X,R31
                 _0x2020016:
000186 89ea      	LDD  R30,Y+18
000187 89fb      	LDD  R31,Y+18+1
000188 9631      	ADIW R30,1
000189 8bea      	STD  Y+18,R30
00018a 8bfb      	STD  Y+18+1,R31
00018b 9731      	SBIW R30,1
00018c 91e4      	LPM  R30,Z
00018d 2f2e      	MOV  R18,R30
00018e 30e0      	CPI  R30,0
00018f f409      	BRNE PC+2
000190 c115      	RJMP _0x2020018
000191 2fe1      	MOV  R30,R17
000192 30e0      	CPI  R30,0
000193 f439      	BRNE _0x202001C
000194 3225      	CPI  R18,37
000195 f411      	BRNE _0x202001D
000196 e011      	LDI  R17,LOW(1)
000197 c002      	RJMP _0x202001E
                 _0x202001D:
000198 940e 0309 	CALL SUBOPT_0x2
                 _0x202001E:
00019a c10a      	RJMP _0x202001B
                 _0x202001C:
00019b 30e1      	CPI  R30,LOW(0x1)
00019c f4a9      	BRNE _0x202001F
00019d 3225      	CPI  R18,37
00019e f419      	BRNE _0x2020020
00019f 940e 0309 	CALL SUBOPT_0x2
0001a1 c102      	RJMP _0x20200CC
                 _0x2020020:
0001a2 e012      	LDI  R17,LOW(2)
0001a3 e040      	LDI  R20,LOW(0)
0001a4 e000      	LDI  R16,LOW(0)
0001a5 322d      	CPI  R18,45
0001a6 f411      	BRNE _0x2020021
0001a7 e001      	LDI  R16,LOW(1)
0001a8 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001a9 322b      	CPI  R18,43
0001aa f411      	BRNE _0x2020022
0001ab e24b      	LDI  R20,LOW(43)
0001ac c0f8      	RJMP _0x202001B
                 _0x2020022:
0001ad 3220      	CPI  R18,32
0001ae f411      	BRNE _0x2020023
0001af e240      	LDI  R20,LOW(32)
0001b0 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001b1 c002      	RJMP _0x2020024
                 _0x202001F:
0001b2 30e2      	CPI  R30,LOW(0x2)
0001b3 f439      	BRNE _0x2020025
                 _0x2020024:
0001b4 e050      	LDI  R21,LOW(0)
0001b5 e013      	LDI  R17,LOW(3)
0001b6 3320      	CPI  R18,48
0001b7 f411      	BRNE _0x2020026
0001b8 6800      	ORI  R16,LOW(128)
0001b9 c0eb      	RJMP _0x202001B
                 _0x2020026:
0001ba c003      	RJMP _0x2020027
                 _0x2020025:
0001bb 30e3      	CPI  R30,LOW(0x3)
0001bc f009      	BREQ PC+2
0001bd c0e7      	RJMP _0x202001B
                 _0x2020027:
0001be 3320      	CPI  R18,48
0001bf f010      	BRLO _0x202002A
0001c0 332a      	CPI  R18,58
0001c1 f008      	BRLO _0x202002B
                 _0x202002A:
0001c2 c007      	RJMP _0x2020029
                 _0x202002B:
0001c3 e0aa      	LDI  R26,LOW(10)
0001c4 9f5a      	MUL  R21,R26
0001c5 2d50      	MOV  R21,R0
0001c6 2fe2      	MOV  R30,R18
0001c7 53e0      	SUBI R30,LOW(48)
0001c8 0f5e      	ADD  R21,R30
0001c9 c0db      	RJMP _0x202001B
                 _0x2020029:
0001ca 2fe2      	MOV  R30,R18
0001cb 36e3      	CPI  R30,LOW(0x63)
0001cc f449      	BRNE _0x202002F
0001cd 940e 0310 	CALL SUBOPT_0x3
0001cf 89e8      	LDD  R30,Y+16
0001d0 89f9      	LDD  R31,Y+16+1
0001d1 81a4      	LDD  R26,Z+4
0001d2 93aa      	ST   -Y,R26
0001d3 940e 0316 	CALL SUBOPT_0x4
0001d5 c0ce      	RJMP _0x2020030
                 _0x202002F:
0001d6 37e3      	CPI  R30,LOW(0x73)
0001d7 f441      	BRNE _0x2020032
0001d8 940e 0310 	CALL SUBOPT_0x3
0001da 940e 031c 	CALL SUBOPT_0x5
0001dc 940e 02e2 	CALL _strlen
0001de 2f1e      	MOV  R17,R30
0001df c00a      	RJMP _0x2020033
                 _0x2020032:
0001e0 37e0      	CPI  R30,LOW(0x70)
0001e1 f461      	BRNE _0x2020035
0001e2 940e 0310 	CALL SUBOPT_0x3
0001e4 940e 031c 	CALL SUBOPT_0x5
0001e6 940e 02ee 	CALL _strlenf
0001e8 2f1e      	MOV  R17,R30
0001e9 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001ea 6002      	ORI  R16,LOW(2)
0001eb 770f      	ANDI R16,LOW(127)
0001ec e030      	LDI  R19,LOW(0)
0001ed c034      	RJMP _0x2020036
                 _0x2020035:
0001ee 36e4      	CPI  R30,LOW(0x64)
0001ef f011      	BREQ _0x2020039
0001f0 36e9      	CPI  R30,LOW(0x69)
0001f1 f411      	BRNE _0x202003A
                 _0x2020039:
0001f2 6004      	ORI  R16,LOW(4)
0001f3 c002      	RJMP _0x202003B
                 _0x202003A:
0001f4 37e5      	CPI  R30,LOW(0x75)
0001f5 f431      	BRNE _0x202003C
                 _0x202003B:
0001f6 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
0001f7 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001f8 83ee      	STD  Y+6,R30
0001f9 83ff      	STD  Y+6+1,R31
0001fa e015      	LDI  R17,LOW(5)
0001fb c00c      	RJMP _0x202003D
                 _0x202003C:
0001fc 35e8      	CPI  R30,LOW(0x58)
0001fd f411      	BRNE _0x202003F
0001fe 6008      	ORI  R16,LOW(8)
0001ff c003      	RJMP _0x2020040
                 _0x202003F:
000200 37e8      	CPI  R30,LOW(0x78)
000201 f009      	BREQ PC+2
000202 c0a1      	RJMP _0x2020071
                 _0x2020040:
000203 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000204 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000205 83ee      	STD  Y+6,R30
000206 83ff      	STD  Y+6+1,R31
000207 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000208 ff02      	SBRS R16,2
000209 c014      	RJMP _0x2020042
00020a 940e 0310 	CALL SUBOPT_0x3
00020c 940e 0326 	CALL SUBOPT_0x6
00020e 85ab      	LDD  R26,Y+11
00020f 23aa      	TST  R26
000210 f43a      	BRPL _0x2020043
000211 85ea      	LDD  R30,Y+10
000212 85fb      	LDD  R31,Y+10+1
000213 940e 0343 	CALL __ANEGW1
000215 87ea      	STD  Y+10,R30
000216 87fb      	STD  Y+10+1,R31
000217 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000218 3040      	CPI  R20,0
000219 f011      	BREQ _0x2020044
00021a 5f1f      	SUBI R17,-LOW(1)
00021b c001      	RJMP _0x2020045
                 _0x2020044:
00021c 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00021d c004      	RJMP _0x2020046
                 _0x2020042:
00021e 940e 0310 	CALL SUBOPT_0x3
000220 940e 0326 	CALL SUBOPT_0x6
                 _0x2020046:
                 _0x2020036:
000222 fd00      	SBRC R16,0
000223 c011      	RJMP _0x2020047
                 _0x2020048:
000224 1715      	CP   R17,R21
000225 f478      	BRSH _0x202004A
000226 ff07      	SBRS R16,7
000227 c008      	RJMP _0x202004B
000228 ff02      	SBRS R16,2
000229 c004      	RJMP _0x202004C
00022a 7f0b      	ANDI R16,LOW(251)
00022b 2f24      	MOV  R18,R20
00022c 5011      	SUBI R17,LOW(1)
00022d c001      	RJMP _0x202004D
                 _0x202004C:
00022e e320      	LDI  R18,LOW(48)
                 _0x202004D:
00022f c001      	RJMP _0x202004E
                 _0x202004B:
000230 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000231 940e 0309 	CALL SUBOPT_0x2
000233 5051      	SUBI R21,LOW(1)
000234 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000235 2f31      	MOV  R19,R17
000236 ff01      	SBRS R16,1
000237 c017      	RJMP _0x202004F
                 _0x2020050:
000238 3030      	CPI  R19,0
000239 f0a1      	BREQ _0x2020052
00023a ff03      	SBRS R16,3
00023b c006      	RJMP _0x2020053
00023c 81ee      	LDD  R30,Y+6
00023d 81ff      	LDD  R31,Y+6+1
00023e 9125      	LPM  R18,Z+
00023f 83ee      	STD  Y+6,R30
000240 83ff      	STD  Y+6+1,R31
000241 c005      	RJMP _0x2020054
                 _0x2020053:
000242 81ae      	LDD  R26,Y+6
000243 81bf      	LDD  R27,Y+6+1
000244 912d      	LD   R18,X+
000245 83ae      	STD  Y+6,R26
000246 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000247 940e 0309 	CALL SUBOPT_0x2
000249 3050      	CPI  R21,0
00024a f009      	BREQ _0x2020055
00024b 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00024c 5031      	SUBI R19,LOW(1)
00024d cfea      	RJMP _0x2020050
                 _0x2020052:
00024e c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00024f e320      	LDI  R18,LOW(48)
000250 81ee      	LDD  R30,Y+6
000251 81ff      	LDD  R31,Y+6+1
000252 940e 034b 	CALL __GETW1PF
000254 87e8      	STD  Y+8,R30
000255 87f9      	STD  Y+8+1,R31
000256 81ee      	LDD  R30,Y+6
000257 81ff      	LDD  R31,Y+6+1
000258 9632      	ADIW R30,2
000259 83ee      	STD  Y+6,R30
00025a 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00025b 85e8      	LDD  R30,Y+8
00025c 85f9      	LDD  R31,Y+8+1
00025d 85aa      	LDD  R26,Y+10
00025e 85bb      	LDD  R27,Y+10+1
00025f 17ae      	CP   R26,R30
000260 07bf      	CPC  R27,R31
000261 f050      	BRLO _0x202005C
000262 5f2f      	SUBI R18,-LOW(1)
000263 85a8      	LDD  R26,Y+8
000264 85b9      	LDD  R27,Y+8+1
000265 85ea      	LDD  R30,Y+10
000266 85fb      	LDD  R31,Y+10+1
000267 1bea      	SUB  R30,R26
000268 0bfb      	SBC  R31,R27
000269 87ea      	STD  Y+10,R30
00026a 87fb      	STD  Y+10+1,R31
00026b cfef      	RJMP _0x202005A
                 _0x202005C:
00026c 332a      	CPI  R18,58
00026d f028      	BRLO _0x202005D
00026e ff03      	SBRS R16,3
00026f c002      	RJMP _0x202005E
000270 5f29      	SUBI R18,-LOW(7)
000271 c001      	RJMP _0x202005F
                 _0x202005E:
000272 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000273 fd04      	SBRC R16,4
000274 c01a      	RJMP _0x2020061
000275 3321      	CPI  R18,49
000276 f420      	BRSH _0x2020063
000277 85a8      	LDD  R26,Y+8
000278 85b9      	LDD  R27,Y+8+1
000279 9711      	SBIW R26,1
00027a f409      	BRNE _0x2020062
                 _0x2020063:
00027b c009      	RJMP _0x20200CD
                 _0x2020062:
00027c 1753      	CP   R21,R19
00027d f010      	BRLO _0x2020067
00027e ff00      	SBRS R16,0
00027f c001      	RJMP _0x2020068
                 _0x2020067:
000280 c013      	RJMP _0x2020066
                 _0x2020068:
000281 e220      	LDI  R18,LOW(32)
000282 ff07      	SBRS R16,7
000283 c00b      	RJMP _0x2020069
000284 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000285 6100      	ORI  R16,LOW(16)
000286 ff02      	SBRS R16,2
000287 c007      	RJMP _0x202006A
000288 7f0b      	ANDI R16,LOW(251)
000289 934a      	ST   -Y,R20
00028a 940e 0316 	CALL SUBOPT_0x4
00028c 3050      	CPI  R21,0
00028d f009      	BREQ _0x202006B
00028e 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00028f 940e 0309 	CALL SUBOPT_0x2
000291 3050      	CPI  R21,0
000292 f009      	BREQ _0x202006C
000293 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000294 5031      	SUBI R19,LOW(1)
000295 85a8      	LDD  R26,Y+8
000296 85b9      	LDD  R27,Y+8+1
000297 9712      	SBIW R26,2
000298 f008      	BRLO _0x2020059
000299 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00029a ff00      	SBRS R16,0
00029b c008      	RJMP _0x202006D
                 _0x202006E:
00029c 3050      	CPI  R21,0
00029d f031      	BREQ _0x2020070
00029e 5051      	SUBI R21,LOW(1)
00029f e2e0      	LDI  R30,LOW(32)
0002a0 93ea      	ST   -Y,R30
0002a1 940e 0316 	CALL SUBOPT_0x4
0002a3 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002a4 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002a5 cee0      	RJMP _0x2020016
                 _0x2020018:
0002a6 85ac      	LDD  R26,Y+12
0002a7 85bd      	LDD  R27,Y+12+1
0002a8 940e 0347 	CALL __GETW1P
0002aa 940e 035b 	CALL __LOADLOCR6
0002ac 9664      	ADIW R28,20
0002ad 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002ae 92ff      	PUSH R15
0002af 2ef8      	MOV  R15,R24
0002b0 9726      	SBIW R28,6
0002b1 940e 0356 	CALL __SAVELOCR4
0002b3 940e 032e 	CALL SUBOPT_0x7
0002b5 9730      	SBIW R30,0
0002b6 f419      	BRNE _0x2020072
0002b7 efef      	LDI  R30,LOW(65535)
0002b8 efff      	LDI  R31,HIGH(65535)
0002b9 c023      	RJMP _0x2080001
                 _0x2020072:
0002ba 01de      	MOVW R26,R28
0002bb 9616      	ADIW R26,6
0002bc 940e 033f 	CALL __ADDW2R15
0002be 018d      	MOVW R16,R26
0002bf 940e 032e 	CALL SUBOPT_0x7
0002c1 83ee      	STD  Y+6,R30
0002c2 83ff      	STD  Y+6+1,R31
0002c3 e0e0      	LDI  R30,LOW(0)
0002c4 87e8      	STD  Y+8,R30
0002c5 87e9      	STD  Y+8+1,R30
0002c6 01de      	MOVW R26,R28
0002c7 961a      	ADIW R26,10
0002c8 940e 033f 	CALL __ADDW2R15
0002ca 940e 0347 	CALL __GETW1P
0002cc 93fa      	ST   -Y,R31
0002cd 93ea      	ST   -Y,R30
0002ce 931a      	ST   -Y,R17
0002cf 930a      	ST   -Y,R16
0002d0 e3ea      	LDI  R30,LOW(_put_buff_G101)
0002d1 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002d2 93fa      	ST   -Y,R31
0002d3 93ea      	ST   -Y,R30
0002d4 01de      	MOVW R26,R28
0002d5 961a      	ADIW R26,10
0002d6 dea3      	RCALL __print_G101
0002d7 019f      	MOVW R18,R30
0002d8 81ae      	LDD  R26,Y+6
0002d9 81bf      	LDD  R27,Y+6+1
0002da e0e0      	LDI  R30,LOW(0)
0002db 93ec      	ST   X,R30
0002dc 01f9      	MOVW R30,R18
                 _0x2080001:
0002dd 940e 035d 	CALL __LOADLOCR4
0002df 962a      	ADIW R28,10
0002e0 90ff      	POP  R15
0002e1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002e2 93ba      	ST   -Y,R27
0002e3 93aa      	ST   -Y,R26
0002e4 91a9          ld   r26,y+
0002e5 91b9          ld   r27,y+
0002e6 27ee          clr  r30
0002e7 27ff          clr  r31
                 strlen0:
0002e8 916d          ld   r22,x+
0002e9 2366          tst  r22
0002ea f011          breq strlen1
0002eb 9631          adiw r30,1
0002ec cffb          rjmp strlen0
                 strlen1:
0002ed 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002ee 93ba      	ST   -Y,R27
0002ef 93aa      	ST   -Y,R26
0002f0 27aa          clr  r26
0002f1 27bb          clr  r27
0002f2 91e9          ld   r30,y+
0002f3 91f9          ld   r31,y+
                 strlenf0:
0002f4 9005      	lpm  r0,z+
0002f5 2000          tst  r0
0002f6 f011          breq strlenf1
0002f7 9611          adiw r26,1
0002f8 cffb          rjmp strlenf0
                 strlenf1:
0002f9 01fd          movw r30,r26
0002fa 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _lcd_buffer:
000160           	.BYTE 0x20
                 __base_y_G100:
000180           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0002fb 940e 00c1 	CALL __lcd_write_data
0002fd e0a3      	LDI  R26,LOW(3)
0002fe e0b0      	LDI  R27,0
0002ff 940c 0335 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000301 e3a0      	LDI  R26,LOW(48)
000302 940e 00ad 	CALL __lcd_write_nibble_G100
                +
000304 ec88     +LDI R24 , LOW ( 200 )
000305 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000306 9701     +SBIW R24 , 1
000307 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000308 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2:
000309 932a      	ST   -Y,R18
00030a 85ad      	LDD  R26,Y+13
00030b 85be      	LDD  R27,Y+13+1
00030c 85ef      	LDD  R30,Y+15
00030d 89f8      	LDD  R31,Y+15+1
00030e 9509      	ICALL
00030f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3:
000310 89e8      	LDD  R30,Y+16
000311 89f9      	LDD  R31,Y+16+1
000312 9734      	SBIW R30,4
000313 8be8      	STD  Y+16,R30
000314 8bf9      	STD  Y+16+1,R31
000315 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000316 85ad      	LDD  R26,Y+13
000317 85be      	LDD  R27,Y+13+1
000318 85ef      	LDD  R30,Y+15
000319 89f8      	LDD  R31,Y+15+1
00031a 9509      	ICALL
00031b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
00031c 89a8      	LDD  R26,Y+16
00031d 89b9      	LDD  R27,Y+16+1
00031e 9614      	ADIW R26,4
00031f 940e 0347 	CALL __GETW1P
000321 83ee      	STD  Y+6,R30
000322 83ff      	STD  Y+6+1,R31
000323 81ae      	LDD  R26,Y+6
000324 81bf      	LDD  R27,Y+6+1
000325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000326 89a8      	LDD  R26,Y+16
000327 89b9      	LDD  R27,Y+16+1
000328 9614      	ADIW R26,4
000329 940e 0347 	CALL __GETW1P
00032b 87ea      	STD  Y+10,R30
00032c 87fb      	STD  Y+10+1,R31
00032d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00032e 01de      	MOVW R26,R28
00032f 961c      	ADIW R26,12
000330 940e 033f 	CALL __ADDW2R15
000332 940e 0347 	CALL __GETW1P
000334 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000335 9610      	adiw r26,0
000336 f039      	breq __delay_ms1
                 __delay_ms0:
000337 95a8      	wdr
                +
000338 ed80     +LDI R24 , LOW ( 0x7D0 )
000339 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00033a 9701     +SBIW R24 , 1
00033b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00033c 9711      	sbiw r26,1
00033d f7c9      	brne __delay_ms0
                 __delay_ms1:
00033e 9508      	ret
                 
                 __ADDW2R15:
00033f 2400      	CLR  R0
000340 0daf      	ADD  R26,R15
000341 1db0      	ADC  R27,R0
000342 9508      	RET
                 
                 __ANEGW1:
000343 95f1      	NEG  R31
000344 95e1      	NEG  R30
000345 40f0      	SBCI R31,0
000346 9508      	RET
                 
                 __GETW1P:
000347 91ed      	LD   R30,X+
000348 91fc      	LD   R31,X
000349 9711      	SBIW R26,1
00034a 9508      	RET
                 
                 __GETW1PF:
00034b 9005      	LPM  R0,Z+
00034c 91f4      	LPM  R31,Z
00034d 2de0      	MOV  R30,R0
00034e 9508      	RET
                 
                 __PUTPARD1:
00034f 937a      	ST   -Y,R23
000350 936a      	ST   -Y,R22
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
000353 9508      	RET
                 
                 __SAVELOCR6:
000354 935a      	ST   -Y,R21
                 __SAVELOCR5:
000355 934a      	ST   -Y,R20
                 __SAVELOCR4:
000356 933a      	ST   -Y,R19
                 __SAVELOCR3:
000357 932a      	ST   -Y,R18
                 __SAVELOCR2:
000358 931a      	ST   -Y,R17
000359 930a      	ST   -Y,R16
00035a 9508      	RET
                 
                 __LOADLOCR6:
00035b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00035c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00035d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00035e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00035f 8119      	LDD  R17,Y+1
000360 8108      	LD   R16,Y
000361 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   5 r26:  98 r27:  39 r28:  14 r29:   1 r30: 169 r31:  58 
x  :  23 y  : 169 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  24 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  50 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   3 jmp   :  23 ld    :  27 ldd   :  77 ldi   :  90 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  18 movw  :  14 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   9 out   :  16 pop   :   1 push  :   1 rcall :  17 ret   :  24 
reti  :   1 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  60 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006c4   1682     50   1732   16384  10.6%
[.dseg] 0x000060 0x000184      0     36     36    1024   3.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 6 warnings
